{"_id":"@modelcontextprotocol/sdk","_rev":"4952965-67323992a77385a7fc45cbcb","dist-tags":{"latest":"1.20.2"},"name":"@modelcontextprotocol/sdk","time":{"created":"2024-11-11T17:06:26.751Z","modified":"2025-10-24T00:58:28.368Z","0.4.0":"2024-11-11T15:53:16.047Z","0.5.0":"2024-11-15T13:47:53.983Z","0.6.0":"2024-11-16T16:43:06.119Z","0.6.1":"2024-11-20T18:20:22.217Z","0.7.0":"2024-11-20T21:30:47.952Z","1.0.0":"2024-11-25T15:06:19.231Z","1.0.1":"2024-11-26T14:47:32.250Z","1.0.2":"2024-12-04T14:23:18.628Z","1.0.3":"2024-12-04T17:40:36.511Z","1.0.4":"2024-12-17T13:10:24.992Z","1.1.0":"2025-01-03T09:03:45.881Z","1.1.1":"2025-01-10T10:18:53.259Z","1.2.0":"2025-01-20T15:29:57.707Z","1.3.0":"2025-01-20T15:37:55.476Z","1.3.1":"2025-01-21T12:58:12.754Z","1.3.2":"2025-01-22T11:46:03.487Z","1.4.0":"2025-01-23T14:02:11.182Z","1.4.1":"2025-01-24T14:54:06.432Z","1.5.0":"2025-02-12T14:33:35.967Z","1.6.0":"2025-02-24T11:19:29.382Z","1.6.1":"2025-02-28T11:57:49.193Z","1.7.0":"2025-03-11T10:55:57.591Z","1.8.0":"2025-03-26T10:20:10.349Z","1.9.0":"2025-04-07T10:39:01.105Z","1.10.0":"2025-04-17T17:43:53.818Z","1.10.1":"2025-04-18T11:03:52.817Z","1.10.2":"2025-04-22T11:54:01.309Z","1.11.0":"2025-05-01T18:11:20.140Z","1.11.1":"2025-05-08T17:09:40.387Z","1.11.2":"2025-05-12T09:21:48.290Z","1.11.3":"2025-05-15T09:36:46.913Z","1.11.4":"2025-05-16T22:53:07.878Z","1.11.5":"2025-05-21T19:22:07.831Z","1.12.0":"2025-05-22T15:50:27.866Z","1.12.1":"2025-05-29T14:46:37.477Z","1.12.2":"2025-06-13T09:26:32.180Z","1.12.3":"2025-06-13T15:36:08.623Z","1.13.0":"2025-06-18T20:13:11.176Z","1.13.1":"2025-06-23T13:42:09.212Z","1.13.2":"2025-06-26T17:59:00.844Z","1.13.3":"2025-07-01T15:51:05.840Z","1.14.0":"2025-07-03T15:44:02.765Z","1.15.0":"2025-07-03T22:34:57.659Z","1.15.1":"2025-07-10T15:24:43.622Z","1.16.0":"2025-07-17T19:25:14.546Z","1.17.0":"2025-07-24T17:59:28.028Z","1.17.1":"2025-07-31T18:37:25.172Z","1.17.2":"2025-08-07T20:36:04.952Z","1.17.3":"2025-08-14T15:01:44.741Z","1.17.4":"2025-08-22T09:22:25.553Z","1.17.5":"2025-09-02T16:02:57.004Z","1.18.0":"2025-09-11T19:41:51.754Z","1.18.1":"2025-09-18T13:37:48.771Z","1.18.2":"2025-09-25T15:38:53.516Z","1.19.1":"2025-10-02T17:29:01.400Z","1.20.0":"2025-10-09T21:00:24.265Z","1.20.1":"2025-10-16T19:27:49.182Z","1.20.2":"2025-10-24T00:58:11.471Z"},"versions":{"0.4.0":{"name":"@modelcontextprotocol/sdk","version":"0.4.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.github.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","main":"./dist/index.js","types":"./dist/index.d.ts","exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc","prepack":"tsc","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@0.4.0","gitHead":"373b6f1d717e340bc7dd800d433cc640cf9e6eb5","_nodeVersion":"18.20.4","_npmVersion":"10.7.0","dist":{"integrity":"sha512-79gx8xh4o9YzdbtqMukOe5WKzvEZpvBA1x8PAgJWL7J5k06+vJx8NK2kWzOazPgqnfDego7cNEO8tjai/nOPAA==","shasum":"22bb4a97d4d28aa1126401bbcc026fab4bee40d9","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-0.4.0.tgz","fileCount":71,"unpackedSize":1555032,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCOSR4DsOiFwgIuBzHVn/7CRrWZvuV804T63Nr8tHohqAIgJ0GBXoQvC8QVUeCW0buo60VuOibUl+tnvqNY95zbNO0="}],"size":70586},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sdk_0.4.0_1731340395796_0.8009038891122069"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-11-11T15:53:16.047Z","publish_time":1731340396047,"_source_registry_name":"default"},"0.5.0":{"name":"@modelcontextprotocol/sdk","version":"0.5.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.github.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","main":"./dist/index.js","types":"./dist/index.d.ts","exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc","prepack":"tsc","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@0.5.0","gitHead":"106d1c26b09514b36f00681baf147fc051c2df0e","_nodeVersion":"18.20.4","_npmVersion":"10.7.0","dist":{"integrity":"sha512-RXgulUX6ewvxjAG0kOpLMEdXXWkzWgaoCGaA2CwNW7cQCIphjpJhjpHSiaPdVCnisjRF/0Cm9KWHUuIoeiAblQ==","shasum":"d657577f2ead2741cad064cbe87ed2244eed80e6","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-0.5.0.tgz","fileCount":87,"unpackedSize":1654071,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDstkXcOKZBBMN9ZJTufB6BEB9nLPbDxpaYAEADAUaK4gIgRVRg+oQlZohKNtjUucYzYqS7PvJmE0GSDOdBNPJn92o="}],"size":81707},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"jspahrsummers","email":"justin@jspahrsummers.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sdk_0.5.0_1731678473656_0.2032203008736313"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-11-15T13:47:53.983Z","publish_time":1731678473983,"_source_registry_name":"default"},"0.6.0":{"name":"@modelcontextprotocol/sdk","version":"0.6.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.github.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","main":"./dist/index.js","types":"./dist/index.d.ts","exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc","prepack":"tsc","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@0.6.0","gitHead":"1cb92b6246868666f160dc7cb66e789d02b2b182","_nodeVersion":"18.20.4","_npmVersion":"10.7.0","dist":{"integrity":"sha512-9rsDudGhDtMbvxohPoMMyAUOmEzQsOK+XFchh6gZGqo8sx9sBuZQs+CUttXqa8RZXKDaJRCN2tUtgGof7jRkkw==","shasum":"a691c0aa634a2ac4b61ee7cb4a24603120fc1f4f","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-0.6.0.tgz","fileCount":79,"unpackedSize":1659551,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDsoKrbVKvHroxyMlWvsXh0yvwMshvuItjcnEYklQqPOgIhAL5oLIcE+IHhX4eX1lgIB08qR+2JOneL9lV0bb7/WZhr"}],"size":81861},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"jspahrsummers","email":"justin@jspahrsummers.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sdk_0.6.0_1731775385937_0.11203307324985978"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-11-16T16:43:06.119Z","publish_time":1731775386119,"_source_registry_name":"default"},"0.6.1":{"name":"@modelcontextprotocol/sdk","version":"0.6.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","main":"./dist/index.js","types":"./dist/index.d.ts","exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc","prepack":"tsc","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@0.6.1","gitHead":"96627096d9110c85aef8b3487fa626be7908a835","_nodeVersion":"18.20.4","_npmVersion":"10.7.0","dist":{"integrity":"sha512-OkVXMix3EIbB5Z6yife2XTrSlOnVvCLR1Kg91I4pYFEsV9RbnoyQVScXCuVhGaZHOnTZgso8lMQN1Po2TadGKQ==","shasum":"4e144155992749faf191faa512ac0c7a23152522","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-0.6.1.tgz","fileCount":79,"unpackedSize":1660405,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGCL7bNn5NzfoOufX0WAqwfz7XaXAkSCIHSr52nNtVDRAiBRnE4B+tXI//38z7A7Jl6j7M8DY89Gf0ibsu4xtzHJvQ=="}],"size":82238},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"ashwin-ant","email":"ashwin@anthropic.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"jspahrsummers","email":"justin@jspahrsummers.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sdk_0.6.1_1732126821950_0.5103503731816905"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-11-20T18:20:22.217Z","publish_time":1732126822217,"_source_registry_name":"default"},"0.7.0":{"name":"@modelcontextprotocol/sdk","version":"0.7.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","main":"./dist/index.js","types":"./dist/index.d.ts","exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc","prepack":"tsc","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@0.7.0","gitHead":"25d3123ac3381c5b76877cb18922b39e34fa123b","_nodeVersion":"18.20.4","_npmVersion":"10.7.0","dist":{"integrity":"sha512-YlnQf8//eDHClUM607vb/6+GHmCdMnIfOkN2pcpexN4go9sYHm2JfNnqc5ILS7M8enUlwe9dQO9886l3NO3rUw==","shasum":"c9e21005429c2ff24348ea6c68a78aa5c0e3d20e","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-0.7.0.tgz","fileCount":79,"unpackedSize":1661262,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCGaVpUmz/GyV+DdgyxmFez0mPoHib+TQI6uvUqOnK0UAIhANfD2pCX9GQhyQtlLF1htoL9uwXBSn0ftLv9UEOQBdpk"}],"size":82424},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"ashwin-ant","email":"ashwin@anthropic.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"jspahrsummers","email":"justin@jspahrsummers.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sdk_0.7.0_1732138247797_0.03220034004441863"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-11-20T21:30:47.952Z","publish_time":1732138247952,"_source_registry_name":"default"},"1.0.0":{"name":"@modelcontextprotocol/sdk","version":"1.0.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","main":"./dist/index.js","types":"./dist/index.d.ts","exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc","prepack":"tsc","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.0.0","gitHead":"cab95e53a054dfa5a0743d26ec33f6baa4765e25","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-mbe0otw8vTtZoL5pVucXAmx6oEC7YjdXBgVeFkJXASu4OAnLkrIeNw9zwzU5CwEp19M54bjOUGcna90Dl/H5Bw==","shasum":"a910c3b7487c137dc3e999ed4a5223329ba7ab44","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.0.0.tgz","fileCount":79,"unpackedSize":1661484,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCHdzTAYVqQ7x9HaYq4QnY6clPa6+vGwHu6SbHShUPtIgIhAN3QVKIuMHnCiuS6cFFKIAgHdRxM05i0hBD/jDFWlIfQ"}],"size":82454},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sdk_1.0.0_1732547179051_0.29249999768382184"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-11-25T15:06:19.231Z","publish_time":1732547179231,"_source_registry_name":"default"},"1.0.1":{"name":"@modelcontextprotocol/sdk","version":"1.0.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","main":"./dist/index.js","types":"./dist/index.d.ts","exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc","prepack":"tsc","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.0.1","gitHead":"105b310b184d8db2b736c13e6834b711e8f8555f","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-slLdFaxQJ9AlRg+hw28iiTtGvShAOgOKXcD0F91nUcRYiOMuS9ZBYjcdNZRXW9G5JQ511GRTdUy1zQVZDpJ+4w==","shasum":"810684e7c11b7e056adab895edf3c4a1bc796205","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.0.1.tgz","fileCount":79,"unpackedSize":1660757,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEVx8/s4MU+4DVpojRAZjhym+aJ23riP+Brrp1+u/s+jAiA82s7wyMqkVEZjm4blfyZeCQ6Vkrx1S3iFAGeXBhnjOA=="}],"size":82180},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sdk_1.0.1_1732632452022_0.6108397885787584"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-11-26T14:47:32.250Z","publish_time":1732632452250,"_source_registry_name":"default"},"1.0.2":{"name":"@modelcontextprotocol/sdk","version":"1.0.2","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","main":"./dist/index.js","types":"./dist/index.d.ts","exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc","prepack":"tsc","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.0.2","gitHead":"45af3820fabeec456fafc3ac44a5980d0512e10a","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-QWjVDWkpQjCtbIYUD1t4KzcrYQVtKC9hGs5FHFjlH30oAjZJ/nSYqn8xTqT1ugtiI0txa+uHNrsEIFLew+CCSw==","shasum":"373a8d5181a28437ce1a0fe6a5cf87c8e8af8278","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.0.2.tgz","fileCount":79,"unpackedSize":1620858,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDF7yzLhkEB7iketV/K71u729IosJu942esGOV/57Rn+AIgMuXQU5SJYcBABeYaJdR8uiCuaE7K+Q0wmi1cUt+SaYs="}],"size":81562},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sdk_1.0.2_1733322198420_0.9902568061513615"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-12-04T14:23:18.628Z","publish_time":1733322198628,"_source_registry_name":"default","deprecated":"Deprecated due to accidental breaking change in point release"},"1.0.3":{"name":"@modelcontextprotocol/sdk","version":"1.0.3","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","main":"./dist/index.js","types":"./dist/index.d.ts","exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc","prepack":"tsc","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.0.3","gitHead":"989550d5f890fe70f9c1cdaee1714fb408c780f0","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-2as3cX/VJ0YBHGmdv3GFyTpoM8q2gqE98zh3Vf1NwnsSY0h3mvoO07MUzfygCKkWsFjcZm4otIiqD6Xh7kiSBQ==","shasum":"778e1764c2f4844ae44492aabd0d55a680db2a65","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.0.3.tgz","fileCount":79,"unpackedSize":1660866,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDC3k6gxdObQQM2kOuKlP+WouvG5+jGwHnuGGlYwEr/AAiEAgq+x8C7jclxoCCHLK4SJbGb2M0g3QI3h5r6S6HyHGD8="}],"size":82204},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/sdk_1.0.3_1733334036270_0.16522911947504348"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-12-04T17:40:36.511Z","publish_time":1733334036511,"_source_registry_name":"default"},"1.0.4":{"name":"@modelcontextprotocol/sdk","version":"1.0.4","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","main":"./dist/index.js","types":"./dist/index.d.ts","exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc","prepack":"tsc","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.0.4","gitHead":"422a5359ee0bff943389eddf1d71ca23c32ab92f","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-C+jw1lF6HSGzs7EZpzHbXfzz9rj9him4BaoumlTciW/IDDgIpweF/qiCWKlP02QKg5PPcgY6xY2WCt5y2tpYow==","shasum":"34ad1edd3db7dd7154e782312dfb29d2d0c11d21","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.0.4.tgz","fileCount":79,"unpackedSize":1661074,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCPOj2nAyp4M6rohFumsG42DzYqc0Oq/stnKUJF4q4IjgIhAOVCkSQk44Q66Itw3grofTHEoxzSfAffiWFjR1QkUj4z"}],"size":82276},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.0.4_1734441024820_0.2598220965890621"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-12-17T13:10:24.992Z","publish_time":1734441024992,"_source_registry_name":"default"},"1.1.0":{"name":"@modelcontextprotocol/sdk","version":"1.1.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc -p tsconfig.prod.json","prepack":"tsc -p tsconfig.prod.json","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.1.0","gitHead":"3f178b2b7e2c6710353c650409f9ec01d5822ad7","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-o5PIPz0vc1bJYXS0oLvRr8yUOzYtxEFL1rWP4aiO8qLslCksmbKhONy6CTpq0WPuIXUt2YuXoRtVA2EcLix3fw==","shasum":"9343ee9c53ac4138608572c2eb34db78752d8664","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.1.0.tgz","fileCount":55,"unpackedSize":1596070,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCID1wjudKubktRTzl2Kwc01tbgvgdE8RTUqN2dIkQBNvIAiBLIjYVfbD9/jiNAWwBWztc6llDeio4HAYQwBZ7axELBQ=="}],"size":74679},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.1.0_1735895025663_0.6370785698562458"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-01-03T09:03:45.881Z","publish_time":1735895025881,"_source_registry_name":"default"},"1.1.1":{"name":"@modelcontextprotocol/sdk","version":"1.1.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":"./dist/*"},"typesVersions":{"*":{"*":["./dist/*"]}},"scripts":{"build":"tsc -p tsconfig.prod.json","prepack":"tsc -p tsconfig.prod.json","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.1.1","gitHead":"00c7ab0f9da451ae236c05cc479c7ed8167c38b5","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-siCApQgBn3U8R93TdumLtezRyRIlrA/a63GrTRO1jP31fRyOohpu0iPLvXzsyptxmy7B8GDxr8+r+Phu6mHgzg==","shasum":"9402e14c339da4420700d12288730a38fac777e3","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.1.1.tgz","fileCount":55,"unpackedSize":1596883,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCnCuCRvZyiP85Gk1cuj53dlYeBmldviJGz/MfeUE+YdQIgSNXWSiiSDlvFMfCEXFYj7P9iYl2SsmYEk1T+eYXiC+g="}],"size":75167},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.1.1_1736504333089_0.6618765320800153"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-01-10T10:18:53.259Z","publish_time":1736504333259,"_source_registry_name":"default"},"1.2.0":{"name":"@modelcontextprotocol/sdk","version":"1.2.0","keywords":["modelcontextprotocol","mcp"],"author":{"url":"https://anthropic.com","name":"Anthropic, PBC"},"license":"MIT","_id":"@modelcontextprotocol/sdk@1.2.0","maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"dist":{"shasum":"b0a81459d3df0d864b93eb2e0faff1d1cb4ffdf3","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.2.0.tgz","fileCount":109,"integrity":"sha512-ymA0KtuF3wvJtKEtnA7XSrb2BsHzIdxW1UcNvvMowwbS6/b5MMQbngPoscO+Ftj7NmwwBq5WXW6qVKb8D1FJrA==","signatures":[{"sig":"MEYCIQCv8DY5XqXuw5TQ43ny6PImHkLBSzn8HSlp67iY+qCFRAIhAKxadnKNQx5pL99Kxm9rO3l6C+pE7gcuBNPbBzC+fQz4","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":3195202,"size":124319},"type":"module","engines":{"node":">=18"},"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"gitHead":"405ee78d06bd609273e3601f08e11f0324fdb295","scripts":{"lint":"eslint src/","test":"jest","build":"npm run build:esm && npm run build:cjs","start":"npm run server","client":"tsx src/cli.ts client","server":"tsx watch --clear-screen=false src/cli.ts server","prepack":"npm run build:esm && npm run build:cjs","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json"},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"repository":{"url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git","type":"git"},"_npmVersion":"10.8.2","description":"Model Context Protocol implementation for TypeScript","directories":{},"resolutions":{"strip-ansi":"6.0.1"},"_nodeVersion":"18.20.5","dependencies":{"zod":"^3.23.8","raw-body":"^3.0.0","content-type":"^1.0.5"},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"_hasShrinkwrap":false,"devDependencies":{"ws":"^8.18.0","tsx":"^4.16.5","jest":"^29.7.0","eslint":"^9.8.0","express":"^4.19.2","ts-jest":"^29.2.4","@types/ws":"^8.5.12","@eslint/js":"^9.8.0","typescript":"^5.5.4","@types/jest":"^29.5.12","@types/node":"^22.0.2","eventsource":"^2.0.2","@types/express":"^4.17.21","@types/eslint__js":"^8.42.3","typescript-eslint":"^8.0.0","@types/eventsource":"^1.1.15","@types/content-type":"^1.1.8"},"_npmOperationalInternal":{"tmp":"tmp/sdk_1.2.0_1737386997491_0.15865074380247957","host":"s3://npm-registry-packages-npm-production"},"_cnpmcore_publish_time":"2025-01-20T15:29:57.707Z","publish_time":1737386997707,"_source_registry_name":"default"},"1.3.0":{"name":"@modelcontextprotocol/sdk","version":"1.3.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.3.0","gitHead":"438505b74ceaacfb7b28ab9e877c728ba5e19479","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-no7j22gAE5dYZ65PppPfbnevO5GiX8b53LA7tb6KfUrmHMFac4ciESZctoivC97aoH4i0xQBtTzli1Q+wpMy5w==","shasum":"eef2724dffb8bdb5c0acabe55a83cca2d56a3a1b","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.3.0.tgz","fileCount":133,"unpackedSize":3340208,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBrc+XsRWDgcZtEEusSrTkzCmhGe/rrD7lSMmqZHQb6IAiEAzGHUi+x+OHiDrue6c9nKkqiYsUFmjT/IbLqzgK81eIg="}],"size":142122},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.3.0_1737387475165_0.9686708830057069"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-01-20T15:37:55.476Z","publish_time":1737387475476,"_source_registry_name":"default"},"1.3.1":{"name":"@modelcontextprotocol/sdk","version":"1.3.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.3.1","gitHead":"1fb33e8117c5ca98eb7dcb5747f975828d316a4a","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-Fu3HstNO03/S5nvwh3KjRfP5JOSMl6IbOBxRl6JBDXMFRHPSJ4kiiV7n5yJjY51GtrFw3Y+V/vdsweN5bxULWQ==","shasum":"a5d34a7a815a56a47d6de252a6f72707fc1d26b8","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.3.1.tgz","fileCount":133,"unpackedSize":3342577,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICd+OcX8XIJ/vgMaqw09H8rnskutggxexWHK60hCtdEqAiBE2tNBTKlM0DCA3VD3nFGhKm5T7SyWtqsLqqXa5CXC6g=="}],"size":142374},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.3.1_1737464292510_0.37714835556773996"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-01-21T12:58:12.754Z","publish_time":1737464292754,"_source_registry_name":"default"},"1.3.2":{"name":"@modelcontextprotocol/sdk","version":"1.3.2","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eventsource":"^2.0.2","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.3.2","gitHead":"cf4c592c8be4a52e3d9e159eb146bfe2f3f77aea","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-Go+Iv/QTilhOxZppH2IuX+RaR9a4mjg/+PX17imoKqbb7mvYMN2dgjASL6PhKj07tRR4F8VM3ScPPlBenZ+gIw==","shasum":"056b32f96a0b15bbfbb8dc555db5af35f6039aa2","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.3.2.tgz","fileCount":133,"unpackedSize":3343335,"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCID/HqBLrJLx6Q4O4MKM4s6VLTxaISWporRTLNoyjiEGXAiEAu6SmAFyVa8ajoZGFdvb+RiImaycDJ09VbnVzYhsoSoo="}],"size":142517},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.3.2_1737546363278_0.6042475356895942"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-01-22T11:46:03.487Z","publish_time":1737546363487,"_source_registry_name":"default"},"1.4.0":{"name":"@modelcontextprotocol/sdk","version":"1.4.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","eventsource":"^3.0.2","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.4.0","gitHead":"8533f106bf2140a415a14bd982a4493a67439474","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-50YTsT4H9PuqmgwXkr/BPl0ankfEfxqVtFG8I378XqUThasnYRdNwE2PqktiJNm5MncOf3s5q37juv6kMe6WZQ==","shasum":"79ef2bc449a8a1caff3f9f93000849faf901aba0","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.4.0.tgz","fileCount":133,"unpackedSize":3351429,"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIAs7R0G5b8xA7Ab/Zd0WnB9+PPoNsr+NTO+EPiqy3yfhAiEA4qv2hdRvy8wGEB1IHbkiR5KqFDyq6ie2b6xbcEv/SGc="}],"size":143697},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.4.0_1737640930936_0.043223038675402226"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-01-23T14:02:11.182Z","publish_time":1737640931182,"_source_registry_name":"default"},"1.4.1":{"name":"@modelcontextprotocol/sdk","version":"1.4.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","eventsource":"^3.0.2","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.4.1","gitHead":"87197fb4a7676dcf4d0f6ac1b91fb22e13c1f439","_nodeVersion":"18.20.5","_npmVersion":"10.8.2","dist":{"integrity":"sha512-wS6YC4lkUZ9QpP+/7NBTlVNiEvsnyl0xF7rRusLF+RsG0xDPc/zWR7fEEyhKnnNutGsDAZh59l/AeoWGwIb1+g==","shasum":"27e7a182a998c2fc63da5cf7a00d1ac52e1f07b6","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.4.1.tgz","fileCount":133,"unpackedSize":3353018,"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIBRwYCp0sU6AsMtxQJANFqSr8y5F93h7oRt9sFwmzlt1AiEA+M7otjKLcSqGdoa1Kf7ybEL0hqOSH50dodCK+wnnCtM="}],"size":143955},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.4.1_1737730446214_0.7968088486412932"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-01-24T14:54:06.432Z","publish_time":1737730446432,"_source_registry_name":"default"},"1.5.0":{"name":"@modelcontextprotocol/sdk","version":"1.5.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","eventsource":"^3.0.2","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@types/content-type":"^1.1.8","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^4.17.21","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","express":"^4.19.2","jest":"^29.7.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.5.0","gitHead":"423b62ba8a23aec53b6fb90213fc91285362e0ad","_nodeVersion":"18.20.6","_npmVersion":"10.8.2","dist":{"integrity":"sha512-IJ+5iVVs8FCumIHxWqpwgkwOzyhtHVKy45s6Ug7Dv0MfRpaYisH8QQ87rIWeWdOzlk8sfhitZ7HCyQZk7d6b8w==","shasum":"4071e768498a286194ec7686ee4c2f6e9647506d","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.5.0.tgz","fileCount":133,"unpackedSize":3353663,"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEQCIH7gcDabNww6VOkOpEh9L9+zxIVzuR+xqamNzOjmXCVPAiAzq84FFA82S0HOi3tjErY6KNzQN/jCWCkiznkhYYr2Gw=="}],"size":144025},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.5.0_1739370815720_0.44769826456771034"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-02-12T14:33:35.967Z","publish_time":1739370815967,"_source_registry_name":"default"},"1.6.0":{"name":"@modelcontextprotocol/sdk","version":"1.6.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^4.1.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.6.0","gitHead":"d5906b7cf206e2b66f4d8f843a24f213fe7a23dd","_nodeVersion":"18.20.6","_npmVersion":"10.8.2","dist":{"integrity":"sha512-585s8g+jzuGBomzgzDeP5l8gEyiSs+KhoAHbA2ZZ24Zgm83IZsyCLl/fmWhPHbfYsuLG8NE6SWGZA5ZBql8jSw==","shasum":"1d1849c9b36c0e494cf77398579dbd7d46c1ed34","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.6.0.tgz","fileCount":253,"unpackedSize":3624748,"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEQCIH8NgF6yMq+2Kolo3h0iXy1uLp9g1HLtVN+ECJq4C0nGAiBV7FasFYb5biOURm5Ug744Qzl+Yo9eKr5iGprcyXkl4Q=="}],"size":177904},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.6.0_1740395969092_0.40687382788300863"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-02-24T11:19:29.382Z","publish_time":1740395969382,"_source_registry_name":"default"},"1.6.1":{"name":"@modelcontextprotocol/sdk","version":"1.6.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^4.1.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.6.1","gitHead":"66e1508162d37c0b83b0637ebcd7f07946e3d210","_nodeVersion":"18.20.7","_npmVersion":"10.8.2","dist":{"integrity":"sha512-oxzMzYCkZHMntzuyerehK3fV6A2Kwh5BD6CGEJSVDU2QNEhfLOptf2X7esQgaHZXHZY0oHmMsOtIDLP71UJXgA==","shasum":"49a2fc8fb2470ba9a0513eb13b63ff4d4e21a600","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.6.1.tgz","fileCount":253,"unpackedSize":3634500,"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIEFJB1LLRkSOLdHDCFsOYFKZbjl5P6/evbAKj0mnRn18AiEAkHrydd/XopWUUHlsAYRO5XrQ7Hpto2jZjRqhuiCyEPU="}],"size":179144},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.6.1_1740743868947_0.6694178749827262"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-02-28T11:57:49.193Z","publish_time":1740743869193,"_source_registry_name":"default"},"1.7.0":{"name":"@modelcontextprotocol/sdk","version":"1.7.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^4.1.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.7.0","gitHead":"0fa2397174eba309b54575294d56754c52b13a65","_nodeVersion":"18.20.7","_npmVersion":"10.8.2","dist":{"integrity":"sha512-IYPe/FLpvF3IZrd/f5p5ffmWhMc3aEMuM2wGJASDqC2Ge7qatVCdbfPx3n/5xFeb19xN0j/911M2AaFuircsWA==","shasum":"77da3978e2ecedba6d306c0f2178a7d5189c9224","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.7.0.tgz","fileCount":253,"unpackedSize":3635812,"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEQCIA5ivqzE0N27An0wL6BE8UIOdoK7HUQBsAwFuioHElvqAiAw3oUnqG1yBCIu2Vo0nhfsY9Mml1llrVDTAHpC1jVtTg=="}],"size":179293},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.7.0_1741690557341_0.08723244115063267"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-03-11T10:55:57.591Z","publish_time":1741690557591,"_source_registry_name":"default"},"1.8.0":{"name":"@modelcontextprotocol/sdk","version":"1.8.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.3","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^4.1.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.8.0","gitHead":"784012946dbc28f69708061863da6733f91c6696","_nodeVersion":"18.20.7","_npmVersion":"10.8.2","dist":{"integrity":"sha512-e06W7SwrontJDHwCawNO5SGxG+nU9AAx+jpHHZqGl/WrDBdWOpvirC+s58VpJTB5QemI4jTRcjWT4Pt3Q1NPQQ==","shasum":"55cdd65054ec24e53800250c70e07429d669db67","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.8.0.tgz","fileCount":253,"unpackedSize":3636203,"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEQCIAG7JSmN0mGw5N+BLv1FlKOjE6D3+mbE4KeXhsF+605EAiBP/8gchQ5n3LTMd30Ir9SeWOJlwAIKSNGVeBjVZPhnrw=="}],"size":179437},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.8.0_1742984410094_0.30401014050063835"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-03-26T10:20:10.349Z","publish_time":1742984410349,"_source_registry_name":"default"},"1.9.0":{"name":"@modelcontextprotocol/sdk","version":"1.9.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.3","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.9.0","gitHead":"0d0af5402d04461b3464f415055988d17f29f7f6","_nodeVersion":"18.20.7","_npmVersion":"10.8.2","dist":{"integrity":"sha512-Jq2EUCQpe0iyO5FGpzVYDNFR6oR53AIrwph9yWl7uSc7IWUMsrmpmSaTGra5hQNunXpM+9oit85p924jWuHzUA==","shasum":"1bf7a4843870b81da26983b8e69bf398d87055f1","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.9.0.tgz","fileCount":261,"unpackedSize":3842970,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.9.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIQCComkF9FoNftK4VNnYvfABNLUSWqK9eutPpT3eJ1QS+wIgLG9BoiIDEFN2X0Ck5zIpVc/JYJOIwocQQOwB7FSNBEI="}],"size":186264},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.9.0_1744022340854_0.0937889257061939"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-04-07T10:39:01.105Z","publish_time":1744022341105,"_source_registry_name":"default"},"1.10.0":{"name":"@modelcontextprotocol/sdk","version":"1.10.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.3","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.10.0","gitHead":"64653f54bd69ec2f6703f7c1e0745f84d220bea7","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-wijOavYZfSOADbVM0LA7mrQ17N4IKNdFcfezknCCsZ1Y1KstVWlkDZ5ebcxuQJmqTTxsNjBHLc7it1SV0TBiPg==","shasum":"b5f2c9701131d93a48210334e3a36e893ce879f2","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.10.0.tgz","fileCount":341,"unpackedSize":4275813,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.10.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCICTa8lzQhWq3wHiV8JmaYPKssyiOtJFH7QxDmE4+38iDAiEA1hfwQfdrSeZyPKtXNrS8BCSiXOx/faHSu3CN8V0Ckb8="}],"size":242731},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.10.0_1744911833574_0.3298010785879244"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-04-17T17:43:53.818Z","publish_time":1744911833818,"_source_registry_name":"default"},"1.10.1":{"name":"@modelcontextprotocol/sdk","version":"1.10.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.3","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.10.1","gitHead":"5b6d35eb12bebfe48f8fd160b56575ec8eac7a21","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-xNYdFdkJqEfIaTVP1gPKoEvluACHZsHZegIoICX8DM1o6Qf3G5u2BQJHmgd0n4YgRPqqK/u1ujQvrgAxxSJT9w==","shasum":"b7b83cfd9a382f8b38970bccd8e97b1f7155edca","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.10.1.tgz","fileCount":349,"unpackedSize":4295189,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.10.1","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIBrvzsS0TlxB0gHEJw88jTitv4REpbXgODjumsmgeeJRAiEAnFxLS5H762gC9S4C+rzDZvRyHIO6xKafSaBkn6vTLXk="}],"size":244031},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.10.1_1744974232562_0.5892874222971214"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-04-18T11:03:52.817Z","publish_time":1744974232817,"_source_registry_name":"default"},"1.10.2":{"name":"@modelcontextprotocol/sdk","version":"1.10.2","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.3","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.10.2","gitHead":"4d6197ac07776ab95a2d63a781514a75740cf746","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-rb6AMp2DR4SN+kc6L1ta2NCpApyA9WYNx3CrTSZvGxq9wH71bRur+zRqPfg0vQ9mjywR7qZdX2RGHOPq3ss+tA==","shasum":"50cdfbf0b6fbea23420388a7b00e64c13adabac8","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.10.2.tgz","fileCount":365,"unpackedSize":4340013,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.10.2","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQDxljj5Lu0r95NmoRR3AKpPjuORjZ0AyNjuwHmX01oA7gIhAKuHPPMtuKGY5LDec50aV0T+4v2HRynqLHas1xYM69/m"}],"size":249069},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.10.2_1745322841098_0.22155694525879044"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-04-22T11:54:01.309Z","publish_time":1745322841309,"_source_registry_name":"default"},"1.11.0":{"name":"@modelcontextprotocol/sdk","version":"1.11.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.3","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.11.0","gitHead":"621ccea997bf318ee99c7f64ce19609e838615fa","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-k/1pb70eD638anoi0e8wUGAlbMJXyvdV4p62Ko+EZ7eBe1xMx8Uhak1R5DgfoofsK5IBBnRwsYGTaLZl+6/+RQ==","shasum":"9f1762efe6f3365f0bf3b019cc9bd1629d19bc50","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.11.0.tgz","fileCount":365,"unpackedSize":4586362,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.11.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEQCIF1QanywAsbxhiNjX12LhUYoXxjEKIcQUkyPuEyB1tAbAiBRCzembMHmGg/eBEX35IRCoh4f6QVT1CqJg518If4Tww=="}],"size":256650},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.11.0_1746123079913_0.17912842552195096"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-05-01T18:11:20.140Z","publish_time":1746123080140,"_source_registry_name":"default"},"1.11.1":{"name":"@modelcontextprotocol/sdk","version":"1.11.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.3","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.11.1","gitHead":"35fe98a0d63d697bcf5d8366c54e040e9f3a7461","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-9LfmxKTb1v+vUS1/emSk1f5ePmTLkb9Le9AxOB5T0XM59EUumwcS45z05h7aiZx3GI0Bl7mjb3FMEglYj+acuQ==","shasum":"c7f4a1432872ef10130f5d9b0072060c17a3946b","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.11.1.tgz","fileCount":365,"unpackedSize":4586828,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.11.1","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQCDbMy0jV9rSyZKKLzhttLbTBSNJn7ssvsHoTFN/qRupAIhAKmkydrdhbDqbm9LZHtedTb74jqbZ4dLSdH8boF99a7Z"}],"size":256730},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.11.1_1746724180125_0.6251326824871772"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-05-08T17:09:40.387Z","publish_time":1746724180387,"_source_registry_name":"default"},"1.11.2":{"name":"@modelcontextprotocol/sdk","version":"1.11.2","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.3","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.11.2","gitHead":"048bc4f75545545e91b082a43bfa4a595f4a6d4d","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-H9vwztj5OAqHg9GockCQC06k1natgcxWQSRpQcPJf6i5+MWBzfKkRtxGbjQf0X2ihii0ffLZCRGbYV2f2bjNCQ==","shasum":"d81784c140d1a9cc937f61af9f071d8b78befe30","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.11.2.tgz","fileCount":365,"unpackedSize":4588239,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.11.2","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQCjeMo+mLnq8gMNR3gpxVNgtLDNDoyHOw5urMHtIRg1iQIhANtRkvm6xondX3kUbCkJYzpHo6m1YRp2IMgH/De9xbn+"}],"size":256945},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.11.2_1747041708009_0.3033245350253633"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-05-12T09:21:48.290Z","publish_time":1747041708290,"_source_registry_name":"default"},"1.11.3":{"name":"@modelcontextprotocol/sdk","version":"1.11.3","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.11.3","gitHead":"41c99960197e0b47b5d03aa3a1dc89842c0b906c","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-rmOWVRUbUJD7iSvJugjUbFZshTAuJ48MXoZ80Osx1GM0K/H1w7rSEvmw8m6vdWxNASgtaHIhAgre4H/E9GJiYQ==","shasum":"0bcc7b2d74ac1f749d1a7632ec2d674fd7066543","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.11.3.tgz","fileCount":365,"unpackedSize":4591552,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.11.3","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQC7EzYuUBpjQRTeSgSb0j6v30l9ez5oCp7sRx3Gbrt8IwIhAK3zGITKZT8dvwSjyEiyySmxjxyFd46RqBB8bRPhMeQC"}],"size":257545},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.11.3_1747301806686_0.34842020822440345"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-05-15T09:36:46.913Z","publish_time":1747301806913,"_source_registry_name":"default"},"1.11.4":{"name":"@modelcontextprotocol/sdk","version":"1.11.4","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^8.17.1","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.11.4","gitHead":"3f429895fb923717fe2b15934eeb6a11e2578e64","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-OTbhe5slIjiOtLxXhKalkKGhIQrwvhgCDs/C2r8kcBTy5HR/g43aDQU0l7r8O0VGbJPTNJvDc7ZdQMdQDJXmbw==","shasum":"2021c76e208874e1b8551ee24609d921c3372bde","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.11.4.tgz","fileCount":389,"unpackedSize":5224861,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.11.4","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIFTa7xWfs4HHdfsXLaJUgfYFpra25U1OfyHOlmz1hTa2AiEA2yxwOR774C6fehMqF+GtI6lj0D0o2GJyGjvAnpQcWuY="}],"size":275558},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.11.4_1747435987627_0.9884073556010868"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-05-16T22:53:07.878Z","publish_time":1747435987878,"_source_registry_name":"default"},"1.11.5":{"name":"@modelcontextprotocol/sdk","version":"1.11.5","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^8.17.1","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.11.5","gitHead":"0e34916041edd71da24db4b382ba07fdfdf66a28","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-gS7Q7IHpKxjVaNLMUZyTtatZ63ca3h418zPPntAhu/MvG5yfz/8HMcDAOpvpQfx3V3dsw9QQxk8RuFNrQhLlgA==","shasum":"5852149ab702ffc025699ce326426358335a73ee","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.11.5.tgz","fileCount":373,"unpackedSize":4723695,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.11.5","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIQDaY7wJLvfSGdKm1BVr1CemYdjXAY5aA4Evz0vjZ30DHQIgaAflvj6FYLuqeQaGKCzGOBsvdzBo1nPDBK1zv096EPs="}],"size":265267},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.11.5_1747855327613_0.27126637072531246"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-05-21T19:22:07.831Z","publish_time":1747855327831,"_source_registry_name":"default"},"1.12.0":{"name":"@modelcontextprotocol/sdk","version":"1.12.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.12.0","gitHead":"0c4b3082751e1ec387a2f8ddbfe6a8c882d2ce0f","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-m//7RlINx1F3sz3KqwY1WWzVgTcYX52HYk4bJ1hkBXV3zccAEth+jRvG8DBRrdaQuRsPAJOx2MH3zaHNCKL7Zg==","shasum":"c3ac98b7f31db068c218a4ce8c9013ac3f5713ce","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.12.0.tgz","fileCount":389,"unpackedSize":4867545,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.12.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIQCHkGdRdrC0TCzkaiLb7pawy5I0Y/FGQPw8baO/A8x13wIgCy7c/5Rclt/OZi8feUgOUdDy9th131/X65ypv7+Qjxw="}],"size":281366},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.12.0_1747929027663_0.00015855145398169235"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-05-22T15:50:27.866Z","publish_time":1747929027866,"_source_registry_name":"default"},"1.12.1":{"name":"@modelcontextprotocol/sdk","version":"1.12.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.12.1","gitHead":"590d4841373fc4eb86ecc9079834353a98cb84a3","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-KG1CZhZfWg+u8pxeM/mByJDScJSrjjxLc8fwQqbsS8xCjBmQfMNEBTotYdNanKekepnfRI85GtgQlctLFpcYPw==","shasum":"f77503f0263b33cb1e5b81a6ff0c322393cabd37","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.12.1.tgz","fileCount":389,"unpackedSize":4868264,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.12.1","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQCRL2dM5c9H09g9G0gcM+t30KztmZE15y6sypcf5MvW1QIhAPEJfiRlnW0a+hhiK/DdarBrpZHZl6Jmz3Ec4L6SMCS2"}],"size":281420},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.12.1_1748529997296_0.1477987588682934"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-05-29T14:46:37.477Z","publish_time":1748529997477,"_source_registry_name":"default"},"1.12.2":{"name":"@modelcontextprotocol/sdk","version":"1.12.2","keywords":["modelcontextprotocol","mcp"],"author":{"url":"https://anthropic.com","name":"Anthropic, PBC"},"license":"MIT","_id":"@modelcontextprotocol/sdk@1.12.2","maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"dist":{"shasum":"8535772a27b7cf2e6a76615d8e6e30e1c718b238","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.12.2.tgz","fileCount":389,"integrity":"sha512-ShQesHTyTZfcpjnMCUOH1gbhK9CZXL30GLFw4hN8qOiIaRKbkOl91uw79WP4v3Mh4QUffjkUO60ZtBUEzaRaOg==","signatures":[{"sig":"MEYCIQCYMqaU4bRwmCZHQs7NtA/iUlp5i5dYEk0eWZErBaz3awIhAIh11/m+XfY5DbVbR9GpGfHtbWyCW8FH36tLc02tLu3b","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.12.2","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":4868820,"size":281497},"type":"module","engines":{"node":">=18"},"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"gitHead":"b6f0273569713bffc5edd5cdc5030efc3e04e1f6","scripts":{"lint":"eslint src/","test":"jest","build":"npm run build:esm && npm run build:cjs","start":"npm run server","client":"tsx src/cli.ts client","server":"tsx watch --clear-screen=false src/cli.ts server","prepack":"npm run build:esm && npm run build:cjs","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json"},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"repository":{"url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git","type":"git"},"_npmVersion":"10.8.2","description":"Model Context Protocol implementation for TypeScript","directories":{},"resolutions":{"strip-ansi":"6.0.1"},"_nodeVersion":"18.20.8","dependencies":{"ajv":"^6.12.6","zod":"^3.23.8","cors":"^2.8.5","express":"^5.0.1","raw-body":"^3.0.0","cross-spawn":"^7.0.5","eventsource":"^3.0.2","content-type":"^1.0.5","pkce-challenge":"^5.0.0","express-rate-limit":"^7.5.0","zod-to-json-schema":"^3.24.1"},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"_hasShrinkwrap":false,"devDependencies":{"ws":"^8.18.0","tsx":"^4.16.5","jest":"^29.7.0","eslint":"^9.8.0","ts-jest":"^29.2.4","@types/ws":"^8.5.12","supertest":"^7.0.0","@eslint/js":"^9.8.0","typescript":"^5.5.4","@types/cors":"^2.8.17","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/express":"^5.0.0","@types/supertest":"^6.0.2","@types/eslint__js":"^8.42.3","typescript-eslint":"^8.0.0","@jest-mock/express":"^3.0.0","@types/cross-spawn":"^6.0.6","@types/eventsource":"^1.1.15","@types/content-type":"^1.1.8"},"_npmOperationalInternal":{"tmp":"tmp/sdk_1.12.2_1749806791948_0.09792700859541781","host":"s3://npm-registry-packages-npm-production"},"_cnpmcore_publish_time":"2025-06-13T09:26:32.180Z","publish_time":1749806792180,"_source_registry_name":"default"},"1.12.3":{"name":"@modelcontextprotocol/sdk","version":"1.12.3","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.12.3","gitHead":"dd69efa1de8646bb6b195ff8d5f52e13739f4550","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-DyVYSOafBvk3/j1Oka4z5BWT8o4AFmoNyZY9pALOm7Lh3GZglR71Co4r4dEUoqDWdDazIZQHBe7J2Nwkg6gHgQ==","shasum":"c1cba6434b2344d1626b5c12a5b15807e152bf6e","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.12.3.tgz","fileCount":389,"unpackedSize":4868820,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.12.3","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQDWZEJyiCexlwCMsLBDfw5Mz6Wlb4+/4L28zQ5TZO4jxAIhAJjHlCjOtaaU04Jl0fTLoQyIPJNcuDpC8MyhLppdmi5/"}],"size":281496},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.12.3_1749828968358_0.6052481505674521"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-06-13T15:36:08.623Z","publish_time":1749828968623,"_source_registry_name":"default"},"1.13.0":{"name":"@modelcontextprotocol/sdk","version":"1.13.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"tsc -p tsconfig.prod.json && echo '{\"type\": \"module\"}' > dist/esm/package.json","build:cjs":"tsc -p tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.13.0","gitHead":"a68dcdf4520fd17bc2cbe58939ca6ca385f0467b","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-P5FZsXU0kY881F6Hbk9GhsYx02/KgWK1DYf7/tyE/1lcFKhDYPQR9iYjhQXJn+Sg6hQleMo3DB7h7+p4wgp2Lw==","shasum":"4ac5f4db34b78ce2da09915821869c618909e692","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.13.0.tgz","fileCount":405,"unpackedSize":7271831,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.13.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQDzlSzVulPo4wbv92XaoEXELBLqzw02da6T0u9ZZc+LjgIhALkS4bNy8UqHH6BPk2N3jx1y8gQhMySG6iOQscyO7JE4"}],"size":353477},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","actor":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","type":"user"}},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.13.0_1750277590937_0.17938469040093108"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-06-18T20:13:11.176Z","publish_time":1750277591176,"_source_registry_name":"default"},"1.13.1":{"name":"@modelcontextprotocol/sdk","version":"1.13.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.13.1","gitHead":"cb4743d0ad7b7536514774e931d3f41b1ed83b60","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-8q6+9aF0yA39/qWT/uaIj6zTpC+Qu07DnN/lb9mjoquCJsAh6l3HyYqc9O3t2j7GilseOQOQimLg7W3By6jqvg==","shasum":"d0e8666eb16c54488e0e83105604b9618d8d46aa","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.13.1.tgz","fileCount":405,"unpackedSize":7280046,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.13.1","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIHRzzVU2ErqubWMwQq2T+l/mCTos+LvyMCjBiigQAmwtAiEA7BqfWpZ9haamWXY8IOkrWJjHsmkDTs3fK/ELc0TNheo="}],"size":354620},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","actor":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","type":"user"}},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.13.1_1750686128959_0.193002530707433"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-06-23T13:42:09.212Z","publish_time":1750686129212,"_source_registry_name":"default"},"1.13.2":{"name":"@modelcontextprotocol/sdk","version":"1.13.2","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.13.2","gitHead":"1e52f38f368d1db2a3ded4e14c6466366bc05439","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-Vx7qOcmoKkR3qhaQ9qf3GxiVKCEu+zfJddHv6x3dY/9P6+uIwJnmuAur5aB+4FDXf41rRrDnOEGkviX5oYZ67w==","shasum":"cb33fb668a03573cc4d3df9d194dc5c73239861f","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.13.2.tgz","fileCount":405,"unpackedSize":7291934,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.13.2","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIQCm7fylZrQ3sz4NqhwYKAEmOUpMSii9TNrBqYeU8sY1kAIgUlgKOQ816JJVxUc7xiMizoCbfzM1V9fQ/8EvufIAmwA="}],"size":356728},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","actor":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","type":"user"}},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.13.2_1750960740609_0.9798699423109076"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-06-26T17:59:00.844Z","publish_time":1750960740844,"_source_registry_name":"default"},"1.13.3":{"name":"@modelcontextprotocol/sdk","version":"1.13.3","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.13.3","gitHead":"1b14bd7fa4dcc436df0fcb2718f86dc376cdd904","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-bGwA78F/U5G2jrnsdRkPY3IwIwZeWUEfb5o764b79lb0rJmMT76TLwKhdNZOWakOQtedYefwIR4emisEMvInKA==","shasum":"c02a4da051bdc6077c55ca46a241ab4192ca1a6c","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.13.3.tgz","fileCount":413,"unpackedSize":7322399,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.13.3","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIQDt/i6G1T28B5YUIs+mjr62aDv3y1/UHUm/vLYtfhChTQIgML9tunnBliH8lv5To59QXeCWtpF8UEJDCmRbBR+p2MA="}],"size":361151},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","actor":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","type":"user"}},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.13.3_1751385065633_0.78301554566016"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-07-01T15:51:05.840Z","publish_time":1751385065840,"_source_registry_name":"default"},"1.14.0":{"name":"@modelcontextprotocol/sdk","version":"1.14.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.14.0","gitHead":"bf4c5be38e2f0e5dc378654ffdaa607baf968aa0","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-f43SYQVRPGQcYDQMiL7T2qND4v9xCkBpunIVPhNT/K2vUe+R3kYw2FyOIlbPxZJIYnhBNjeaHFeKv/cOZZErNg==","shasum":"377344ef4363cf1939000d74eb636ff480db0b2f","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.14.0.tgz","fileCount":413,"unpackedSize":7322628,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.14.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIQDDMJzInpIXrrqGxGba2YpKK2T+7m36xMW4VrPsSu1E7QIgVVBoeaRuG050UUAikSo+hVVw60qcrJlcnuLLGBr0Vyk="}],"size":361151},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","actor":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","type":"user"}},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.14.0_1751557442534_0.8060307139843699"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-07-03T15:44:02.765Z","publish_time":1751557442765,"_source_registry_name":"default"},"1.15.0":{"name":"@modelcontextprotocol/sdk","version":"1.15.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.15.0","gitHead":"1ac2e5926c93a7f1122e50bbbd6be60de1ae2c87","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-67hnl/ROKdb03Vuu0YOr+baKTvf1/5YBHBm9KnZdjdAh8hjt4FRCPD5ucwxGB237sBpzlqQsLy1PFu7z/ekZ9Q==","shasum":"094df005f72144b0f3c7609fe6efb9137f29238b","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.15.0.tgz","fileCount":413,"unpackedSize":7325364,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.15.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEQCIEmEdRY1AfBIYq/zKbVKCg4n0crkscwanBLe5g8oR+MaAiAt0oZTfz4glzllflEOxNf8rxMZuPGdsSXp6oecS9E8gA=="}],"size":361280},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","actor":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","type":"user"}},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.15.0_1751582097428_0.4714168008838131"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-07-03T22:34:57.659Z","publish_time":1751582097659,"_source_registry_name":"default"},"1.15.1":{"name":"@modelcontextprotocol/sdk","version":"1.15.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.15.1","gitHead":"c6ac083b1b37b222b5bfba5563822daa5d03372e","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-W/XlN9c528yYn+9MQkVjxiTPgPxoxt+oczfjHBDsJx0+59+O7B75Zhsp0B16Xbwbz8ANISDajh6+V7nIcPMc5w==","shasum":"30a235f91e144b62ef1810bc63679e423bac37ec","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.15.1.tgz","fileCount":413,"unpackedSize":7360818,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.15.1","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQDOzmlls1tf/WtNrqQ9VnkDJa1jcP+DwqT1xHqh8N+3NgIhANAImz4bD56iykWOIfmD3Dy9wKJ/jQu+E2bwcx+qZ/2a"}],"size":365999},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","actor":{"name":"jspahrsummers","email":"justin@jspahrsummers.com","type":"user"}},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.15.1_1752161083410_0.06160594363976912"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-07-10T15:24:43.622Z","publish_time":1752161083622,"_source_registry_name":"default"},"1.16.0":{"name":"@modelcontextprotocol/sdk","version":"1.16.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.16.0","gitHead":"400b020c854d31112c8f29a2e280072731ed3d5f","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-8ofX7gkZcLj9H9rSd50mCgm3SSF8C7XoclxJuLoV0Cz3rEQ1tv9MZRYYvJtm9n1BiEQQMzSmE/w2AEkNacLYfg==","shasum":"39a28a4f775778ec90369ddb5ccfb58a5b9b838f","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.16.0.tgz","fileCount":413,"unpackedSize":7389776,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.16.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQC91J73OzKlZlaa3ZwDBAqU9up9b34ojyL7NaSe55Df5AIhAKlzz2+T0ML+cY2nFiD61vmutfpk8A8dNEbnvNaZe+7+"}],"size":374737},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.16.0_1752780314344_0.0091502972685642"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-07-17T19:25:14.546Z","publish_time":1752780314546,"_source_registry_name":"default"},"1.17.0":{"name":"@modelcontextprotocol/sdk","version":"1.17.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.17.0","gitHead":"222db4a9c1ab4f023dc1dd1687212bddd522f48e","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-qFfbWFA7r1Sd8D697L7GkTd36yqDuTkvz0KfOGkgXR8EUhQn3/EDNIR/qUdQNMT8IjmasBvHWuXeisxtXTQT2g==","shasum":"556d91f0b1dcb7aab1b8fa5095ee6e1cc97d590a","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.17.0.tgz","fileCount":413,"unpackedSize":7511825,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.17.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEQCIBtek/06dJt+80EX4OlkYA2PH2q5QBSVx4BXJ+9GVt/+AiB0NrnEgacEpqdEXkq1iC/pnilL3aH2ocP0IEGlXO8mUg=="}],"size":387813},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.17.0_1753379967823_0.23045322788433076"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-07-24T17:59:28.028Z","publish_time":1753379968028,"_source_registry_name":"default"},"1.17.1":{"name":"@modelcontextprotocol/sdk","version":"1.17.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.17.1","gitHead":"0551cc52b8920d7da46a4519b42f335a0a852b6c","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-CPle1OQehbWqd25La9Ack5B07StKIxh4+Bf19qnpZKJC1oI22Y0czZHbifjw1UoczIfKBwBDAp/dFxvHG13B5A==","shasum":"a3628ae2ca0b4a2e6088202b5ee417d884a88537","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.17.1.tgz","fileCount":413,"unpackedSize":7512773,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.17.1","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEQCIDtzW9Olk8wrIwIHCfa+eqeyy3w32MdWNXN9WhEhiI1wAiAg1V1iDZQO8h2bevJPhX/jLIb+OwM3VbwxDfm+5KyHIA=="}],"size":387894},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.17.1_1753987044876_0.39816294577629896"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-07-31T18:37:25.172Z","publish_time":1753987045172,"_source_registry_name":"default"},"1.17.2":{"name":"@modelcontextprotocol/sdk","version":"1.17.2","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.17.2","gitHead":"a1608a6513d18eb965266286904760f830de96fe","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-EFLRNXR/ixpXQWu6/3Cu30ndDFIFNaqUXcTqsGebujeMan9FzhAaFFswLRiFj61rgygDRr8WO1N+UijjgRxX9g==","shasum":"232d079c374bef18d0b411e5d8c7e6c5f24e8684","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.17.2.tgz","fileCount":413,"unpackedSize":7512699,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.17.2","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQC7vbRPRY8Lo/2ipkdWmBLJ/WgwgtDwUe9FeuPtIUktgAIhAOLZY86iBmigklHBfWPBkJcMdY0hghuViF1TBWf4+tlq"}],"size":387984},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.17.2_1754598964697_0.8945670211323224"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-08-07T20:36:04.952Z","publish_time":1754598964952,"_source_registry_name":"default"},"1.17.3":{"name":"@modelcontextprotocol/sdk","version":"1.17.3","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{".":{"import":"./dist/esm/index.js","require":"./dist/cjs/index.js"},"./client":{"import":"./dist/esm/client/index.js","require":"./dist/cjs/client/index.js"},"./server":{"import":"./dist/esm/server/index.js","require":"./dist/cjs/server/index.js"},"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.17.3","gitHead":"4a63974049e27efb3c99325b29454127eed33adf","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-JPwUKWSsbzx+DLFznf/QZ32Qa+ptfbUlHhRLrBQBAFu9iI1iYvizM4p+zhhRDceSsPutXp4z+R/HPVphlIiclg==","shasum":"cf92354220f0183d28179e96a9bf3a8f6d3211ae","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.17.3.tgz","fileCount":413,"unpackedSize":7513563,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.17.3","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIQCatVBREo1N/5q/i7QR1D1/X+HsPqBY3CWIHnHNLZG92AIgdwzMAeRhA1IUz00lQ4z7DFrwcwxtwPyuwU6qtCb3YUg="}],"size":388073},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.17.3_1755183704525_0.27240722969506614"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-08-14T15:01:44.741Z","publish_time":1755183704741,"_source_registry_name":"default"},"1.17.4":{"name":"@modelcontextprotocol/sdk","version":"1.17.4","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{".":{"import":"./dist/esm/index.js","require":"./dist/cjs/index.js"},"./client":{"import":"./dist/esm/client/index.js","require":"./dist/cjs/client/index.js"},"./server":{"import":"./dist/esm/server/index.js","require":"./dist/cjs/server/index.js"},"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.17.4","gitHead":"3bc2235d747c320dfa0b6227cc84414c6d0add89","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-zq24hfuAmmlNZvik0FLI58uE5sriN0WWsQzIlYnzSuKDAHFqJtBFrl/LfB1NLgJT5Y7dEBzaX4yAKqOPrcetaw==","shasum":"27861b312d413ec700caf1e3064642011d8df977","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.17.4.tgz","fileCount":421,"unpackedSize":7571102,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.17.4","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIAUWKXr7NJmzGRtoan6EL3y/l1ppTiFFcvJR2D4WXs1sAiEAwzktMlU2kxWVijVN3CeKj9aT8HaVdFXsww659j64atI="}],"size":395338},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.17.4_1755854545286_0.670513523346852"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-08-22T09:22:25.553Z","publish_time":1755854545553,"_source_registry_name":"default"},"1.17.5":{"name":"@modelcontextprotocol/sdk","version":"1.17.5","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{".":{"import":"./dist/esm/index.js","require":"./dist/cjs/index.js"},"./client":{"import":"./dist/esm/client/index.js","require":"./dist/cjs/client/index.js"},"./server":{"import":"./dist/esm/server/index.js","require":"./dist/cjs/server/index.js"},"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.17.5","gitHead":"bf817939917277a4c59f2e19e7b44b8dd7ff140c","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-QakrKIGniGuRVfWBdMsDea/dx1PNE739QJ7gCM41s9q+qaCYTHCdsIBXQVVXry3mfWAiaM9kT22Hyz53Uw8mfg==","shasum":"7eab1c9249532b16b7e181d9af0aec5f696c1a55","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.17.5.tgz","fileCount":421,"unpackedSize":7578805,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.17.5","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQDd20M5Prqjy6W5d3i5rN1fv/zpDXMBeC1sSC2sZUCU0wIhAK6xNuKLCEfDVvjVvmnXS4wYmiEifLhAD/BYRL3SH5pa"}],"size":396521},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.17.5_1756828976664_0.4863580119485249"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-09-02T16:02:57.004Z","publish_time":1756828977004,"_source_registry_name":"default"},"1.18.0":{"name":"@modelcontextprotocol/sdk","version":"1.18.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{".":{"import":"./dist/esm/index.js","require":"./dist/cjs/index.js"},"./client":{"import":"./dist/esm/client/index.js","require":"./dist/cjs/client/index.js"},"./server":{"import":"./dist/esm/server/index.js","require":"./dist/cjs/server/index.js"},"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.18.0","gitHead":"b28c297184cb0cb64611a3357d6438dd1b0824c6","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-JvKyB6YwS3quM+88JPR0axeRgvdDu3Pv6mdZUy+w4qVkCzGgumb9bXG/TmtDRQv+671yaofVfXSQmFLlWU5qPQ==","shasum":"53489f88b739d2df489ed552c025868f401a095e","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.18.0.tgz","fileCount":421,"unpackedSize":8371621,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.18.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIQDKmgG5IciF01aNVZaPq0VYNzfL09/MuP23OTqV612+LQIgOYV6zbnLMsM6hg0RhXmC87W12IE0gAVJjwspDjV82vM="}],"size":416767},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.18.0_1757619711516_0.023729870421125066"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-09-11T19:41:51.754Z","publish_time":1757619711754,"_source_registry_name":"default"},"1.18.1":{"name":"@modelcontextprotocol/sdk","version":"1.18.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{".":{"import":"./dist/esm/index.js","require":"./dist/cjs/index.js"},"./client":{"import":"./dist/esm/client/index.js","require":"./dist/cjs/client/index.js"},"./server":{"import":"./dist/esm/server/index.js","require":"./dist/cjs/server/index.js"},"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.18.1","gitHead":"c94ba4b43cd305e39d88985c73d6b9bc1153da84","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-d//GE8/Yh7aC3e7p+kZG8JqqEAwwDUmAfvH1quogtbk+ksS6E0RR6toKKESPYYZVre0meqkJb27zb+dhqE9Sgw==","shasum":"cdc7e0809319b0466599b93fbf655dafa9f49ceb","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.18.1.tgz","fileCount":421,"unpackedSize":8373843,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.18.1","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEQCIAC+pqjfVOX1So8PI8xbxqJsyFIx/swDop/FVwWHoFmIAiBhF2/Y/kv8PCjS/6hymfGfhSWubP0RU702GB9Nm/X8og=="}],"size":416988},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.18.1_1758202668571_0.27112811037260753"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-09-18T13:37:48.771Z","publish_time":1758202668771,"_source_registry_name":"default"},"1.18.2":{"name":"@modelcontextprotocol/sdk","version":"1.18.2","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{".":{"import":"./dist/esm/index.js","require":"./dist/cjs/index.js"},"./client":{"import":"./dist/esm/client/index.js","require":"./dist/cjs/client/index.js"},"./server":{"import":"./dist/esm/server/index.js","require":"./dist/cjs/server/index.js"},"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.18.2","gitHead":"058b87c163996b31d5cda744085ecf3c13c5c56a","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-beedclIvFcCnPrYgHsylqiYJVJ/CI47Vyc4tY8no1/Li/O8U4BTlJfy6ZwxkYwx+Mx10nrgwSVrA7VBbhh4slg==","shasum":"dd2f14d61f8f10c1388f3157d07c9ec8fb7be109","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.18.2.tgz","fileCount":421,"unpackedSize":8376756,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.18.2","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIQDNvX230By2VHPQFI1dfEglNNtH2HgiVopZtiUHruqMwAIgGTywoeOe8V1C741gWpb9IrQ/293LVZqihB6CYuCZGBs="}],"size":417440},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.18.2_1758814733331_0.17476276848803418"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-09-25T15:38:53.516Z","publish_time":1758814733516,"_source_registry_name":"default"},"1.19.1":{"name":"@modelcontextprotocol/sdk","version":"1.19.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{".":{"import":"./dist/esm/index.js","require":"./dist/cjs/index.js"},"./client":{"import":"./dist/esm/client/index.js","require":"./dist/cjs/client/index.js"},"./server":{"import":"./dist/esm/server/index.js","require":"./dist/cjs/server/index.js"},"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/ && prettier --check .","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eslint-config-prettier":"^10.1.8","prettier":"3.6.2","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.19.1","gitHead":"29b65b0ce7d400e385c4152d68c6008fc81f5473","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-3Y2h3MZKjec1eAqSTBclATlX+AbC6n1LgfVzRMJLt3v6w0RCYgwLrjbxPDbhsYHt6Wdqc/aCceNJYgj448ELQQ==","shasum":"ba0b583936b2dcab2ee935f8667e82dab6b7b4a9","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.19.1.tgz","fileCount":421,"unpackedSize":9032761,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.19.1","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIFpnDutcI/leTo/f+yqQBicX1pq23XnXlJv2ztYgSJHDAiEA7sj/ZISdE9p5Q/f+nyveTfkZHV2++5ezePK6gXWSjtA="}],"size":457709},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.19.1_1759426141136_0.09823830262381383"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-10-02T17:29:01.400Z","publish_time":1759426141400,"_source_registry_name":"default"},"1.20.0":{"name":"@modelcontextprotocol/sdk","version":"1.20.0","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{".":{"import":"./dist/esm/index.js","require":"./dist/cjs/index.js"},"./client":{"import":"./dist/esm/client/index.js","require":"./dist/cjs/client/index.js"},"./server":{"import":"./dist/esm/server/index.js","require":"./dist/cjs/server/index.js"},"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/ && prettier --check .","lint:fix":"eslint src/ --fix && prettier --write .","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eslint-config-prettier":"^10.1.8","prettier":"3.6.2","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.20.0","gitHead":"c84ef24215396393f28b40bc5ac4cc6ea8fd7b2d","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-kOQ4+fHuT4KbR2iq2IjeV32HiihueuOf1vJkq18z08CLZ1UQrTc8BXJpVfxZkq45+inLLD+D4xx4nBjUelJa4Q==","shasum":"3ff5c58ef23dd2a62ca93a2cc8b8e51f945e53b6","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.20.0.tgz","fileCount":421,"unpackedSize":9037438,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.20.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEQCIHlNNRapsui7RIa7vVHCT0iKR7uuvOmimDBCzS3tXmxhAiBBKSjB+0fm6CoQqZPGGhN1yY2qjYqKRGZ3HKm+Tf27SA=="}],"size":458121},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.20.0_1760043624050_0.3951195891570185"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-10-09T21:00:24.265Z","publish_time":1760043624265,"_source_registry_name":"default"},"1.20.1":{"name":"@modelcontextprotocol/sdk","version":"1.20.1","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{".":{"import":"./dist/esm/index.js","require":"./dist/cjs/index.js"},"./client":{"import":"./dist/esm/client/index.js","require":"./dist/cjs/client/index.js"},"./server":{"import":"./dist/esm/server/index.js","require":"./dist/cjs/server/index.js"},"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/ && prettier --check .","lint:fix":"eslint src/ --fix && prettier --write .","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eslint-config-prettier":"^10.1.8","prettier":"3.6.2","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.20.1","gitHead":"718120d7963193f793466680ad236157d36a2d6b","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-j/P+yuxXfgxb+mW7OEoRCM3G47zCTDqUPivJo/VzpjbG8I9csTXtOprCf5FfOfHK4whOJny0aHuBEON+kS7CCA==","shasum":"f3d8cf2ac438e9761d736941177f7f00cadd94aa","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.20.1.tgz","fileCount":421,"unpackedSize":9039726,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.20.1","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEQCIH3XQVeCgGRbUUIgmpMULx184kx/xex/9EVEJlRSBDXsAiBBKfodE81UX0du9nbCIV7pxvnnUsvOGPax8Jv1MnEfZg=="}],"size":458615},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.20.1_1760642868972_0.5567943813191598"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-10-16T19:27:49.182Z","publish_time":1760642869182,"_source_registry_name":"default"},"1.20.2":{"name":"@modelcontextprotocol/sdk","version":"1.20.2","description":"Model Context Protocol implementation for TypeScript","license":"MIT","author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"homepage":"https://modelcontextprotocol.io","bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"type":"module","repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"},"engines":{"node":">=18"},"keywords":["modelcontextprotocol","mcp"],"exports":{".":{"import":"./dist/esm/index.js","require":"./dist/cjs/index.js"},"./client":{"import":"./dist/esm/client/index.js","require":"./dist/cjs/client/index.js"},"./server":{"import":"./dist/esm/server/index.js","require":"./dist/cjs/server/index.js"},"./*":{"import":"./dist/esm/*","require":"./dist/cjs/*"}},"typesVersions":{"*":{"*":["./dist/esm/*"]}},"scripts":{"fetch:spec-types":"curl -o spec.types.ts https://raw.githubusercontent.com/modelcontextprotocol/modelcontextprotocol/refs/heads/main/schema/draft/schema.ts","build":"npm run build:esm && npm run build:cjs","build:esm":"mkdir -p dist/esm && echo '{\"type\": \"module\"}' > dist/esm/package.json && tsc -p tsconfig.prod.json","build:esm:w":"npm run build:esm -- -w","build:cjs":"mkdir -p dist/cjs && echo '{\"type\": \"commonjs\"}' > dist/cjs/package.json && tsc -p tsconfig.cjs.json","build:cjs:w":"npm run build:cjs -- -w","examples:simple-server:w":"tsx --watch src/examples/server/simpleStreamableHttp.ts --oauth","prepack":"npm run build:esm && npm run build:cjs","lint":"eslint src/ && prettier --check .","lint:fix":"eslint src/ --fix && prettier --write .","test":"npm run fetch:spec-types && jest","start":"npm run server","server":"tsx watch --clear-screen=false src/cli.ts server","client":"tsx src/cli.ts client"},"dependencies":{"ajv":"^6.12.6","content-type":"^1.0.5","cors":"^2.8.5","cross-spawn":"^7.0.5","eventsource":"^3.0.2","eventsource-parser":"^3.0.0","express":"^5.0.1","express-rate-limit":"^7.5.0","pkce-challenge":"^5.0.0","raw-body":"^3.0.0","zod":"^3.23.8","zod-to-json-schema":"^3.24.1"},"devDependencies":{"@eslint/js":"^9.8.0","@jest-mock/express":"^3.0.0","@types/content-type":"^1.1.8","@types/cors":"^2.8.17","@types/cross-spawn":"^6.0.6","@types/eslint__js":"^8.42.3","@types/eventsource":"^1.1.15","@types/express":"^5.0.0","@types/jest":"^29.5.12","@types/node":"^22.0.2","@types/supertest":"^6.0.2","@types/ws":"^8.5.12","eslint":"^9.8.0","eslint-config-prettier":"^10.1.8","prettier":"3.6.2","jest":"^29.7.0","supertest":"^7.0.0","ts-jest":"^29.2.4","tsx":"^4.16.5","typescript":"^5.5.4","typescript-eslint":"^8.0.0","ws":"^8.18.0"},"resolutions":{"strip-ansi":"6.0.1"},"_id":"@modelcontextprotocol/sdk@1.20.2","gitHead":"7098bff073d78cfaee40869897d84a5929c29570","_nodeVersion":"18.20.8","_npmVersion":"10.8.2","dist":{"integrity":"sha512-6rqTdFt67AAAzln3NOKsXRmv5ZzPkgbfaebKBqUbts7vK1GZudqnrun5a8d3M/h955cam9RHZ6Jb4Y1XhnmFPg==","shasum":"7c448a073164841814d34ec9c76bcc37f2d6ffdc","tarball":"https://registry.npmmirror.com/@modelcontextprotocol/sdk/-/sdk-1.20.2.tgz","fileCount":421,"unpackedSize":9040012,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@modelcontextprotocol%2fsdk@1.20.2","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQDRZapzmmaDFF12Zl6J3Sjz4QaD53bp++yS5ilVxYnHQQIhAPtZcRVCT/PLEPrWWi4Ll0Rd8SjfwFnEoaXqvRN1SNpb"}],"size":458670},"_npmUser":{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},"directories":{},"maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/sdk_1.20.2_1761267491229_0.8041187015795783"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2025-10-24T00:58:11.471Z","publish_time":1761267491471,"_source_registry_name":"default"}},"author":{"name":"Anthropic, PBC","url":"https://anthropic.com"},"bugs":{"url":"https://github.com/modelcontextprotocol/typescript-sdk/issues"},"description":"Model Context Protocol implementation for TypeScript","homepage":"https://modelcontextprotocol.io","license":"MIT","maintainers":[{"name":"jspahrsummers","email":"justin@jspahrsummers.com"},{"name":"thedsp","email":"experimentalworks@gmail.com"},{"name":"ashwin-ant","email":"ashwin@anthropic.com"}],"readme":"# MCP TypeScript SDK ![NPM Version](https://img.shields.io/npm/v/%40modelcontextprotocol%2Fsdk) ![MIT licensed](https://img.shields.io/npm/l/%40modelcontextprotocol%2Fsdk)\n\n<details>\n<summary>Table of Contents</summary>\n\n- [Overview](#overview)\n- [Installation](#installation)\n- [Quick Start](#quick-start)\n- [Core Concepts](#core-concepts)\n    - [Server](#server)\n    - [Tools](#tools)\n    - [Resources](#resources)\n    - [Prompts](#prompts)\n    - [Completions](#completions)\n    - [Display Names and Metadata](#display-names-and-metadata)\n    - [Sampling](#sampling)\n- [Running Your Server](#running-your-server)\n    - [Streamable HTTP](#streamable-http)\n    - [stdio](#stdio)\n    - [Testing and Debugging](#testing-and-debugging)\n- [Examples](#examples)\n    - [Echo Server](#echo-server)\n    - [SQLite Explorer](#sqlite-explorer)\n- [Advanced Usage](#advanced-usage)\n    - [Dynamic Servers](#dynamic-servers)\n    - [Improving Network Efficiency with Notification Debouncing](#improving-network-efficiency-with-notification-debouncing)\n    - [Low-Level Server](#low-level-server)\n    - [Eliciting User Input](#eliciting-user-input)\n    - [Writing MCP Clients](#writing-mcp-clients)\n    - [Proxy Authorization Requests Upstream](#proxy-authorization-requests-upstream)\n    - [Backwards Compatibility](#backwards-compatibility)\n- [Documentation](#documentation)\n- [Contributing](#contributing)\n- [License](#license)\n\n</details>\n\n## Overview\n\nThe Model Context Protocol allows applications to provide context for LLMs in a standardized way, separating the concerns of providing context from the actual LLM interaction. This TypeScript SDK implements\n[the full MCP specification](https://modelcontextprotocol.io/specification/latest), making it easy to:\n\n- Create MCP servers that expose resources, prompts and tools\n- Build MCP clients that can connect to any MCP server\n- Use standard transports like stdio and Streamable HTTP\n\n## Installation\n\n```bash\nnpm install @modelcontextprotocol/sdk\n```\n\n## Quick Start\n\nLet's create a simple MCP server that exposes a calculator tool and some data. Save the following as `server.ts`:\n\n```typescript\nimport { McpServer, ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { StreamableHTTPServerTransport } from '@modelcontextprotocol/sdk/server/streamableHttp.js';\nimport express from 'express';\nimport { z } from 'zod';\n\n// Create an MCP server\nconst server = new McpServer({\n    name: 'demo-server',\n    version: '1.0.0'\n});\n\n// Add an addition tool\nserver.registerTool(\n    'add',\n    {\n        title: 'Addition Tool',\n        description: 'Add two numbers',\n        inputSchema: { a: z.number(), b: z.number() },\n        outputSchema: { result: z.number() }\n    },\n    async ({ a, b }) => {\n        const output = { result: a + b };\n        return {\n            content: [{ type: 'text', text: JSON.stringify(output) }],\n            structuredContent: output\n        };\n    }\n);\n\n// Add a dynamic greeting resource\nserver.registerResource(\n    'greeting',\n    new ResourceTemplate('greeting://{name}', { list: undefined }),\n    {\n        title: 'Greeting Resource', // Display name for UI\n        description: 'Dynamic greeting generator'\n    },\n    async (uri, { name }) => ({\n        contents: [\n            {\n                uri: uri.href,\n                text: `Hello, ${name}!`\n            }\n        ]\n    })\n);\n\n// Set up Express and HTTP transport\nconst app = express();\napp.use(express.json());\n\napp.post('/mcp', async (req, res) => {\n    // Create a new transport for each request to prevent request ID collisions\n    const transport = new StreamableHTTPServerTransport({\n        sessionIdGenerator: undefined,\n        enableJsonResponse: true\n    });\n\n    res.on('close', () => {\n        transport.close();\n    });\n\n    await server.connect(transport);\n    await transport.handleRequest(req, res, req.body);\n});\n\nconst port = parseInt(process.env.PORT || '3000');\napp.listen(port, () => {\n    console.log(`Demo MCP Server running on http://localhost:${port}/mcp`);\n}).on('error', error => {\n    console.error('Server error:', error);\n    process.exit(1);\n});\n```\n\nInstall the deps with `npm install @modelcontextprotocol/sdk express zod@3`, and run with `npx -y tsx server.ts`.\n\nYou can connect to it using any MCP client that supports streamable http, such as:\n\n- [MCP Inspector](https://modelcontextprotocol.io/docs/tools/inspector): `npx @modelcontextprotocol/inspector` and connect to the streamable HTTP URL `http://localhost:3000/mcp`\n- [Claude Code](https://docs.claude.com/en/docs/claude-code/mcp): `claude mcp add --transport http my-server http://localhost:3000/mcp`\n- [VS Code](https://code.visualstudio.com/docs/copilot/customization/mcp-servers): `code --add-mcp \"{\\\"name\\\":\\\"my-server\\\",\\\"type\\\":\\\"http\\\",\\\"url\\\":\\\"http://localhost:3000/mcp\\\"}\"`\n- [Cursor](https://cursor.com/docs/context/mcp): Click [this deeplink](cursor://anysphere.cursor-deeplink/mcp/install?name=my-server&config=eyJ1cmwiOiJodHRwOi8vbG9jYWxob3N0OjMwMDAvbWNwIn0%3D)\n\nThen try asking your agent to add two numbers using its new tool!\n\n## Core Concepts\n\n### Server\n\nThe McpServer is your core interface to the MCP protocol. It handles connection management, protocol compliance, and message routing:\n\n```typescript\nconst server = new McpServer({\n    name: 'my-app',\n    version: '1.0.0'\n});\n```\n\n### Tools\n\n[Tools](https://modelcontextprotocol.io/specification/latest/server/tools) let LLMs take actions through your server. Tools can perform computation, fetch data and have side effects. Tools should be designed to be model-controlled - i.e. AI models will decide which tools to call,\nand the arguments.\n\n```typescript\n// Simple tool with parameters\nserver.registerTool(\n    'calculate-bmi',\n    {\n        title: 'BMI Calculator',\n        description: 'Calculate Body Mass Index',\n        inputSchema: {\n            weightKg: z.number(),\n            heightM: z.number()\n        },\n        outputSchema: { bmi: z.number() }\n    },\n    async ({ weightKg, heightM }) => {\n        const output = { bmi: weightKg / (heightM * heightM) };\n        return {\n            content: [\n                {\n                    type: 'text',\n                    text: JSON.stringify(output)\n                }\n            ],\n            structuredContent: output\n        };\n    }\n);\n\n// Async tool with external API call\nserver.registerTool(\n    'fetch-weather',\n    {\n        title: 'Weather Fetcher',\n        description: 'Get weather data for a city',\n        inputSchema: { city: z.string() },\n        outputSchema: { temperature: z.number(), conditions: z.string() }\n    },\n    async ({ city }) => {\n        const response = await fetch(`https://api.weather.com/${city}`);\n        const data = await response.json();\n        const output = { temperature: data.temp, conditions: data.conditions };\n        return {\n            content: [{ type: 'text', text: JSON.stringify(output) }],\n            structuredContent: output\n        };\n    }\n);\n\n// Tool that returns ResourceLinks\nserver.registerTool(\n    'list-files',\n    {\n        title: 'List Files',\n        description: 'List project files',\n        inputSchema: { pattern: z.string() },\n        outputSchema: {\n            count: z.number(),\n            files: z.array(z.object({ name: z.string(), uri: z.string() }))\n        }\n    },\n    async ({ pattern }) => {\n        const output = {\n            count: 2,\n            files: [\n                { name: 'README.md', uri: 'file:///project/README.md' },\n                { name: 'index.ts', uri: 'file:///project/src/index.ts' }\n            ]\n        };\n        return {\n            content: [\n                { type: 'text', text: JSON.stringify(output) },\n                // ResourceLinks let tools return references without file content\n                {\n                    type: 'resource_link',\n                    uri: 'file:///project/README.md',\n                    name: 'README.md',\n                    mimeType: 'text/markdown',\n                    description: 'A README file'\n                },\n                {\n                    type: 'resource_link',\n                    uri: 'file:///project/src/index.ts',\n                    name: 'index.ts',\n                    mimeType: 'text/typescript',\n                    description: 'An index file'\n                }\n            ],\n            structuredContent: output\n        };\n    }\n);\n```\n\n#### ResourceLinks\n\nTools can return `ResourceLink` objects to reference resources without embedding their full content. This can be helpful for performance when dealing with large files or many resources - clients can then selectively read only the resources they need using the provided URIs.\n\n### Resources\n\n[Resources](https://modelcontextprotocol.io/specification/latest/server/resources) can also expose data to LLMs, but unlike tools shouldn't perform significant computation or have side effects.\n\nResources are designed to be used in an application-driven way, meaning MCP client applications can decide how to expose them. For example, a client could expose a resource picker to the human, or could expose them to the model directly.\n\n```typescript\n// Static resource\nserver.registerResource(\n    'config',\n    'config://app',\n    {\n        title: 'Application Config',\n        description: 'Application configuration data',\n        mimeType: 'text/plain'\n    },\n    async uri => ({\n        contents: [\n            {\n                uri: uri.href,\n                text: 'App configuration here'\n            }\n        ]\n    })\n);\n\n// Dynamic resource with parameters\nserver.registerResource(\n    'user-profile',\n    new ResourceTemplate('users://{userId}/profile', { list: undefined }),\n    {\n        title: 'User Profile',\n        description: 'User profile information'\n    },\n    async (uri, { userId }) => ({\n        contents: [\n            {\n                uri: uri.href,\n                text: `Profile data for user ${userId}`\n            }\n        ]\n    })\n);\n\n// Resource with context-aware completion\nserver.registerResource(\n    'repository',\n    new ResourceTemplate('github://repos/{owner}/{repo}', {\n        list: undefined,\n        complete: {\n            // Provide intelligent completions based on previously resolved parameters\n            repo: (value, context) => {\n                if (context?.arguments?.['owner'] === 'org1') {\n                    return ['project1', 'project2', 'project3'].filter(r => r.startsWith(value));\n                }\n                return ['default-repo'].filter(r => r.startsWith(value));\n            }\n        }\n    }),\n    {\n        title: 'GitHub Repository',\n        description: 'Repository information'\n    },\n    async (uri, { owner, repo }) => ({\n        contents: [\n            {\n                uri: uri.href,\n                text: `Repository: ${owner}/${repo}`\n            }\n        ]\n    })\n);\n```\n\n### Prompts\n\n[Prompts](https://modelcontextprotocol.io/specification/latest/server/prompts) are reusable templates that help humans prompt models to interact with your server. They're designed to be user-driven, and might appear as slash commands in a chat interface.\n\n```typescript\nimport { completable } from '@modelcontextprotocol/sdk/server/completable.js';\n\nserver.registerPrompt(\n    'review-code',\n    {\n        title: 'Code Review',\n        description: 'Review code for best practices and potential issues',\n        argsSchema: { code: z.string() }\n    },\n    ({ code }) => ({\n        messages: [\n            {\n                role: 'user',\n                content: {\n                    type: 'text',\n                    text: `Please review this code:\\n\\n${code}`\n                }\n            }\n        ]\n    })\n);\n\n// Prompt with context-aware completion\nserver.registerPrompt(\n    'team-greeting',\n    {\n        title: 'Team Greeting',\n        description: 'Generate a greeting for team members',\n        argsSchema: {\n            department: completable(z.string(), value => {\n                // Department suggestions\n                return ['engineering', 'sales', 'marketing', 'support'].filter(d => d.startsWith(value));\n            }),\n            name: completable(z.string(), (value, context) => {\n                // Name suggestions based on selected department\n                const department = context?.arguments?.['department'];\n                if (department === 'engineering') {\n                    return ['Alice', 'Bob', 'Charlie'].filter(n => n.startsWith(value));\n                } else if (department === 'sales') {\n                    return ['David', 'Eve', 'Frank'].filter(n => n.startsWith(value));\n                } else if (department === 'marketing') {\n                    return ['Grace', 'Henry', 'Iris'].filter(n => n.startsWith(value));\n                }\n                return ['Guest'].filter(n => n.startsWith(value));\n            })\n        }\n    },\n    ({ department, name }) => ({\n        messages: [\n            {\n                role: 'assistant',\n                content: {\n                    type: 'text',\n                    text: `Hello ${name}, welcome to the ${department} team!`\n                }\n            }\n        ]\n    })\n);\n```\n\n### Completions\n\nMCP supports argument completions to help users fill in prompt arguments and resource template parameters. See the examples above for [resource completions](#resources) and [prompt completions](#prompts).\n\n#### Client Usage\n\n```typescript\n// Request completions for any argument\nconst result = await client.complete({\n    ref: {\n        type: 'ref/prompt', // or \"ref/resource\"\n        name: 'example' // or uri: \"template://...\"\n    },\n    argument: {\n        name: 'argumentName',\n        value: 'partial' // What the user has typed so far\n    },\n    context: {\n        // Optional: Include previously resolved arguments\n        arguments: {\n            previousArg: 'value'\n        }\n    }\n});\n```\n\n### Display Names and Metadata\n\nAll resources, tools, and prompts support an optional `title` field for better UI presentation. The `title` is used as a display name (e.g. 'Create a new issue'), while `name` remains the unique identifier (e.g. `create_issue`).\n\n**Note:** The `register*` methods (`registerTool`, `registerPrompt`, `registerResource`) are the recommended approach for new code. The older methods (`tool`, `prompt`, `resource`) remain available for backwards compatibility.\n\n#### Title Precedence for Tools\n\nFor tools specifically, there are two ways to specify a title:\n\n- `title` field in the tool configuration\n- `annotations.title` field (when using the older `tool()` method with annotations)\n\nThe precedence order is: `title` → `annotations.title` → `name`\n\n```typescript\n// Using registerTool (recommended)\nserver.registerTool(\n    'my_tool',\n    {\n        title: 'My Tool', // This title takes precedence\n        annotations: {\n            title: 'Annotation Title' // This is ignored if title is set\n        }\n    },\n    handler\n);\n\n// Using tool with annotations (older API)\nserver.tool(\n    'my_tool',\n    'description',\n    {\n        title: 'Annotation Title' // This is used as title\n    },\n    handler\n);\n```\n\nWhen building clients, use the provided utility to get the appropriate display name:\n\n```typescript\nimport { getDisplayName } from '@modelcontextprotocol/sdk/shared/metadataUtils.js';\n\n// Automatically handles the precedence: title → annotations.title → name\nconst displayName = getDisplayName(tool);\n```\n\n### Sampling\n\nMCP servers can request LLM completions from connected clients that support sampling.\n\n```typescript\nimport { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { StreamableHTTPServerTransport } from '@modelcontextprotocol/sdk/server/streamableHttp.js';\nimport express from 'express';\nimport { z } from 'zod';\n\nconst mcpServer = new McpServer({\n    name: 'tools-with-sample-server',\n    version: '1.0.0'\n});\n\n// Tool that uses LLM sampling to summarize any text\nmcpServer.registerTool(\n    'summarize',\n    {\n        title: 'Text Summarizer',\n        description: 'Summarize any text using an LLM',\n        inputSchema: {\n            text: z.string().describe('Text to summarize')\n        },\n        outputSchema: { summary: z.string() }\n    },\n    async ({ text }) => {\n        // Call the LLM through MCP sampling\n        const response = await mcpServer.server.createMessage({\n            messages: [\n                {\n                    role: 'user',\n                    content: {\n                        type: 'text',\n                        text: `Please summarize the following text concisely:\\n\\n${text}`\n                    }\n                }\n            ],\n            maxTokens: 500\n        });\n\n        const summary = response.content.type === 'text' ? response.content.text : 'Unable to generate summary';\n        const output = { summary };\n        return {\n            content: [{ type: 'text', text: JSON.stringify(output) }],\n            structuredContent: output\n        };\n    }\n);\n\nconst app = express();\napp.use(express.json());\n\napp.post('/mcp', async (req, res) => {\n    const transport = new StreamableHTTPServerTransport({\n        sessionIdGenerator: undefined,\n        enableJsonResponse: true\n    });\n\n    res.on('close', () => {\n        transport.close();\n    });\n\n    await mcpServer.connect(transport);\n    await transport.handleRequest(req, res, req.body);\n});\n\nconst port = parseInt(process.env.PORT || '3000');\napp.listen(port, () => {\n    console.log(`MCP Server running on http://localhost:${port}/mcp`);\n}).on('error', error => {\n    console.error('Server error:', error);\n    process.exit(1);\n});\n```\n\n## Running Your Server\n\nMCP servers in TypeScript need to be connected to a transport to communicate with clients. How you start the server depends on the choice of transport:\n\n### Streamable HTTP\n\nFor remote servers, use the Streamable HTTP transport.\n\n#### Without Session Management (Recommended)\n\nFor most use cases where session management isn't needed:\n\n```typescript\nimport { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { StreamableHTTPServerTransport } from '@modelcontextprotocol/sdk/server/streamableHttp.js';\nimport express from 'express';\nimport { z } from 'zod';\n\nconst app = express();\napp.use(express.json());\n\n// Create the MCP server once (can be reused across requests)\nconst server = new McpServer({\n    name: 'example-server',\n    version: '1.0.0'\n});\n\n// Set up your tools, resources, and prompts\nserver.registerTool(\n    'echo',\n    {\n        title: 'Echo Tool',\n        description: 'Echoes back the provided message',\n        inputSchema: { message: z.string() },\n        outputSchema: { echo: z.string() }\n    },\n    async ({ message }) => {\n        const output = { echo: `Tool echo: ${message}` };\n        return {\n            content: [{ type: 'text', text: JSON.stringify(output) }],\n            structuredContent: output\n        };\n    }\n);\n\napp.post('/mcp', async (req, res) => {\n    // In stateless mode, create a new transport for each request to prevent\n    // request ID collisions. Different clients may use the same JSON-RPC request IDs,\n    // which would cause responses to be routed to the wrong HTTP connections if\n    // the transport state is shared.\n\n    try {\n        const transport = new StreamableHTTPServerTransport({\n            sessionIdGenerator: undefined,\n            enableJsonResponse: true\n        });\n\n        res.on('close', () => {\n            transport.close();\n        });\n\n        await server.connect(transport);\n        await transport.handleRequest(req, res, req.body);\n    } catch (error) {\n        console.error('Error handling MCP request:', error);\n        if (!res.headersSent) {\n            res.status(500).json({\n                jsonrpc: '2.0',\n                error: {\n                    code: -32603,\n                    message: 'Internal server error'\n                },\n                id: null\n            });\n        }\n    }\n});\n\nconst port = parseInt(process.env.PORT || '3000');\napp.listen(port, () => {\n    console.log(`MCP Server running on http://localhost:${port}/mcp`);\n}).on('error', error => {\n    console.error('Server error:', error);\n    process.exit(1);\n});\n```\n\n#### With Session Management\n\nIn some cases, servers need stateful sessions. This can be achieved by [session management](https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#session-management) in the MCP protocol.\n\n```typescript\nimport express from 'express';\nimport { randomUUID } from 'node:crypto';\nimport { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { StreamableHTTPServerTransport } from '@modelcontextprotocol/sdk/server/streamableHttp.js';\nimport { isInitializeRequest } from '@modelcontextprotocol/sdk/types.js';\n\nconst app = express();\napp.use(express.json());\n\n// Map to store transports by session ID\nconst transports: { [sessionId: string]: StreamableHTTPServerTransport } = {};\n\n// Handle POST requests for client-to-server communication\napp.post('/mcp', async (req, res) => {\n    // Check for existing session ID\n    const sessionId = req.headers['mcp-session-id'] as string | undefined;\n    let transport: StreamableHTTPServerTransport;\n\n    if (sessionId && transports[sessionId]) {\n        // Reuse existing transport\n        transport = transports[sessionId];\n    } else if (!sessionId && isInitializeRequest(req.body)) {\n        // New initialization request\n        transport = new StreamableHTTPServerTransport({\n            sessionIdGenerator: () => randomUUID(),\n            onsessioninitialized: sessionId => {\n                // Store the transport by session ID\n                transports[sessionId] = transport;\n            }\n            // DNS rebinding protection is disabled by default for backwards compatibility. If you are running this server\n            // locally, make sure to set:\n            // enableDnsRebindingProtection: true,\n            // allowedHosts: ['127.0.0.1'],\n        });\n\n        // Clean up transport when closed\n        transport.onclose = () => {\n            if (transport.sessionId) {\n                delete transports[transport.sessionId];\n            }\n        };\n        const server = new McpServer({\n            name: 'example-server',\n            version: '1.0.0'\n        });\n\n        // ... set up server resources, tools, and prompts ...\n\n        // Connect to the MCP server\n        await server.connect(transport);\n    } else {\n        // Invalid request\n        res.status(400).json({\n            jsonrpc: '2.0',\n            error: {\n                code: -32000,\n                message: 'Bad Request: No valid session ID provided'\n            },\n            id: null\n        });\n        return;\n    }\n\n    // Handle the request\n    await transport.handleRequest(req, res, req.body);\n});\n\n// Reusable handler for GET and DELETE requests\nconst handleSessionRequest = async (req: express.Request, res: express.Response) => {\n    const sessionId = req.headers['mcp-session-id'] as string | undefined;\n    if (!sessionId || !transports[sessionId]) {\n        res.status(400).send('Invalid or missing session ID');\n        return;\n    }\n\n    const transport = transports[sessionId];\n    await transport.handleRequest(req, res);\n};\n\n// Handle GET requests for server-to-client notifications via SSE\napp.get('/mcp', handleSessionRequest);\n\n// Handle DELETE requests for session termination\napp.delete('/mcp', handleSessionRequest);\n\napp.listen(3000);\n```\n\n#### CORS Configuration for Browser-Based Clients\n\nIf you'd like your server to be accessible by browser-based MCP clients, you'll need to configure CORS headers. The `Mcp-Session-Id` header must be exposed for browser clients to access it:\n\n```typescript\nimport cors from 'cors';\n\n// Add CORS middleware before your MCP routes\napp.use(\n    cors({\n        origin: '*', // Configure appropriately for production, for example:\n        // origin: ['https://your-remote-domain.com', 'https://your-other-remote-domain.com'],\n        exposedHeaders: ['Mcp-Session-Id'],\n        allowedHeaders: ['Content-Type', 'mcp-session-id']\n    })\n);\n```\n\nThis configuration is necessary because:\n\n- The MCP streamable HTTP transport uses the `Mcp-Session-Id` header for session management\n- Browsers restrict access to response headers unless explicitly exposed via CORS\n- Without this configuration, browser-based clients won't be able to read the session ID from initialization responses\n\n#### DNS Rebinding Protection\n\nThe Streamable HTTP transport includes DNS rebinding protection to prevent security vulnerabilities. By default, this protection is **disabled** for backwards compatibility.\n\n**Important**: If you are running this server locally, enable DNS rebinding protection:\n\n```typescript\nconst transport = new StreamableHTTPServerTransport({\n  sessionIdGenerator: () => randomUUID(),\n  enableDnsRebindingProtection: true,\n\n  allowedHosts: ['127.0.0.1', ...],\n  allowedOrigins: ['https://yourdomain.com', 'https://www.yourdomain.com']\n});\n```\n\n### stdio\n\nFor local integrations spawned by another process, you can use the stdio transport:\n\n```typescript\nimport { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';\n\nconst server = new McpServer({\n    name: 'example-server',\n    version: '1.0.0'\n});\n\n// ... set up server resources, tools, and prompts ...\n\nconst transport = new StdioServerTransport();\nawait server.connect(transport);\n```\n\n### Testing and Debugging\n\nTo test your server, you can use the [MCP Inspector](https://github.com/modelcontextprotocol/inspector). See its README for more information.\n\n## Examples\n\n### Echo Server\n\nA simple server demonstrating resources, tools, and prompts:\n\n```typescript\nimport { McpServer, ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { z } from 'zod';\n\nconst server = new McpServer({\n    name: 'echo-server',\n    version: '1.0.0'\n});\n\nserver.registerTool(\n    'echo',\n    {\n        title: 'Echo Tool',\n        description: 'Echoes back the provided message',\n        inputSchema: { message: z.string() },\n        outputSchema: { echo: z.string() }\n    },\n    async ({ message }) => {\n        const output = { echo: `Tool echo: ${message}` };\n        return {\n            content: [{ type: 'text', text: JSON.stringify(output) }],\n            structuredContent: output\n        };\n    }\n);\n\nserver.registerResource(\n    'echo',\n    new ResourceTemplate('echo://{message}', { list: undefined }),\n    {\n        title: 'Echo Resource',\n        description: 'Echoes back messages as resources'\n    },\n    async (uri, { message }) => ({\n        contents: [\n            {\n                uri: uri.href,\n                text: `Resource echo: ${message}`\n            }\n        ]\n    })\n);\n\nserver.registerPrompt(\n    'echo',\n    {\n        title: 'Echo Prompt',\n        description: 'Creates a prompt to process a message',\n        argsSchema: { message: z.string() }\n    },\n    ({ message }) => ({\n        messages: [\n            {\n                role: 'user',\n                content: {\n                    type: 'text',\n                    text: `Please process this message: ${message}`\n                }\n            }\n        ]\n    })\n);\n```\n\n### SQLite Explorer\n\nA more complex example showing database integration:\n\n```typescript\nimport { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport sqlite3 from 'sqlite3';\nimport { promisify } from 'util';\nimport { z } from 'zod';\n\nconst server = new McpServer({\n    name: 'sqlite-explorer',\n    version: '1.0.0'\n});\n\n// Helper to create DB connection\nconst getDb = () => {\n    const db = new sqlite3.Database('database.db');\n    return {\n        all: promisify<string, any[]>(db.all.bind(db)),\n        close: promisify(db.close.bind(db))\n    };\n};\n\nserver.registerResource(\n    'schema',\n    'schema://main',\n    {\n        title: 'Database Schema',\n        description: 'SQLite database schema',\n        mimeType: 'text/plain'\n    },\n    async uri => {\n        const db = getDb();\n        try {\n            const tables = await db.all(\"SELECT sql FROM sqlite_master WHERE type='table'\");\n            return {\n                contents: [\n                    {\n                        uri: uri.href,\n                        text: tables.map((t: { sql: string }) => t.sql).join('\\n')\n                    }\n                ]\n            };\n        } finally {\n            await db.close();\n        }\n    }\n);\n\nserver.registerTool(\n    'query',\n    {\n        title: 'SQL Query',\n        description: 'Execute SQL queries on the database',\n        inputSchema: { sql: z.string() },\n        outputSchema: {\n            rows: z.array(z.record(z.any())),\n            rowCount: z.number()\n        }\n    },\n    async ({ sql }) => {\n        const db = getDb();\n        try {\n            const results = await db.all(sql);\n            const output = { rows: results, rowCount: results.length };\n            return {\n                content: [\n                    {\n                        type: 'text',\n                        text: JSON.stringify(output, null, 2)\n                    }\n                ],\n                structuredContent: output\n            };\n        } catch (err: unknown) {\n            const error = err as Error;\n            return {\n                content: [\n                    {\n                        type: 'text',\n                        text: `Error: ${error.message}`\n                    }\n                ],\n                isError: true\n            };\n        } finally {\n            await db.close();\n        }\n    }\n);\n```\n\n## Advanced Usage\n\n### Dynamic Servers\n\nIf you want to offer an initial set of tools/prompts/resources, but later add additional ones based on user action or external state change, you can add/update/remove them _after_ the Server is connected. This will automatically emit the corresponding `listChanged` notifications:\n\n```typescript\nimport { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { StreamableHTTPServerTransport } from '@modelcontextprotocol/sdk/server/streamableHttp.js';\nimport express from 'express';\nimport { z } from 'zod';\n\nconst server = new McpServer({\n    name: 'Dynamic Example',\n    version: '1.0.0'\n});\n\nconst listMessageTool = server.registerTool(\n    'listMessages',\n    {\n        title: 'List Messages',\n        description: 'List messages in a channel',\n        inputSchema: { channel: z.string() },\n        outputSchema: { messages: z.array(z.string()) }\n    },\n    async ({ channel }) => {\n        const messages = await listMessages(channel);\n        const output = { messages };\n        return {\n            content: [{ type: 'text', text: JSON.stringify(output) }],\n            structuredContent: output\n        };\n    }\n);\n\nconst putMessageTool = server.registerTool(\n    'putMessage',\n    {\n        title: 'Put Message',\n        description: 'Send a message to a channel',\n        inputSchema: { channel: z.string(), message: z.string() },\n        outputSchema: { success: z.boolean() }\n    },\n    async ({ channel, message }) => {\n        await putMessage(channel, message);\n        const output = { success: true };\n        return {\n            content: [{ type: 'text', text: JSON.stringify(output) }],\n            structuredContent: output\n        };\n    }\n);\n// Until we upgrade auth, `putMessage` is disabled (won't show up in listTools)\nputMessageTool.disable();\n\nconst upgradeAuthTool = server.registerTool(\n    'upgradeAuth',\n    {\n        title: 'Upgrade Authorization',\n        description: 'Upgrade user authorization level',\n        inputSchema: { permission: z.enum(['write', 'admin']) },\n        outputSchema: {\n            success: z.boolean(),\n            newPermission: z.string()\n        }\n    },\n    // Any mutations here will automatically emit `listChanged` notifications\n    async ({ permission }) => {\n        const { ok, err, previous } = await upgradeAuthAndStoreToken(permission);\n        if (!ok) {\n            return {\n                content: [{ type: 'text', text: `Error: ${err}` }],\n                isError: true\n            };\n        }\n\n        // If we previously had read-only access, 'putMessage' is now available\n        if (previous === 'read') {\n            putMessageTool.enable();\n        }\n\n        if (permission === 'write') {\n            // If we've just upgraded to 'write' permissions, we can still call 'upgradeAuth'\n            // but can only upgrade to 'admin'.\n            upgradeAuthTool.update({\n                paramsSchema: { permission: z.enum(['admin']) } // change validation rules\n            });\n        } else {\n            // If we're now an admin, we no longer have anywhere to upgrade to, so fully remove that tool\n            upgradeAuthTool.remove();\n        }\n\n        const output = { success: true, newPermission: permission };\n        return {\n            content: [{ type: 'text', text: JSON.stringify(output) }],\n            structuredContent: output\n        };\n    }\n);\n\n// Connect with HTTP transport\nconst app = express();\napp.use(express.json());\n\napp.post('/mcp', async (req, res) => {\n    const transport = new StreamableHTTPServerTransport({\n        sessionIdGenerator: undefined,\n        enableJsonResponse: true\n    });\n\n    res.on('close', () => {\n        transport.close();\n    });\n\n    await server.connect(transport);\n    await transport.handleRequest(req, res, req.body);\n});\n\nconst port = parseInt(process.env.PORT || '3000');\napp.listen(port, () => {\n    console.log(`MCP Server running on http://localhost:${port}/mcp`);\n});\n```\n\n### Improving Network Efficiency with Notification Debouncing\n\nWhen performing bulk updates that trigger notifications (e.g., enabling or disabling multiple tools in a loop), the SDK can send a large number of messages in a short period. To improve performance and reduce network traffic, you can enable notification debouncing.\n\nThis feature coalesces multiple, rapid calls for the same notification type into a single message. For example, if you disable five tools in a row, only one `notifications/tools/list_changed` message will be sent instead of five.\n\n> [!IMPORTANT] This feature is designed for \"simple\" notifications that do not carry unique data in their parameters. To prevent silent data loss, debouncing is **automatically bypassed** for any notification that contains a `params` object or a `relatedRequestId`. Such\n> notifications will always be sent immediately.\n\nThis is an opt-in feature configured during server initialization.\n\n```typescript\nimport { McpServer } from \"@modelcontextprotocol/sdk/server/mcp.js\";\n\nconst server = new McpServer(\n  {\n    name: \"efficient-server\",\n    version: \"1.0.0\"\n  },\n  {\n    // Enable notification debouncing for specific methods\n    debouncedNotificationMethods: [\n      'notifications/tools/list_changed',\n      'notifications/resources/list_changed',\n      'notifications/prompts/list_changed'\n    ]\n  }\n);\n\n// Now, any rapid changes to tools, resources, or prompts will result\n// in a single, consolidated notification for each type.\nserver.registerTool(\"tool1\", ...).disable();\nserver.registerTool(\"tool2\", ...).disable();\nserver.registerTool(\"tool3\", ...).disable();\n// Only one 'notifications/tools/list_changed' is sent.\n```\n\n### Low-Level Server\n\nFor more control, you can use the low-level Server class directly:\n\n```typescript\nimport { Server } from '@modelcontextprotocol/sdk/server/index.js';\nimport { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';\nimport { ListPromptsRequestSchema, GetPromptRequestSchema } from '@modelcontextprotocol/sdk/types.js';\n\nconst server = new Server(\n    {\n        name: 'example-server',\n        version: '1.0.0'\n    },\n    {\n        capabilities: {\n            prompts: {}\n        }\n    }\n);\n\nserver.setRequestHandler(ListPromptsRequestSchema, async () => {\n    return {\n        prompts: [\n            {\n                name: 'example-prompt',\n                description: 'An example prompt template',\n                arguments: [\n                    {\n                        name: 'arg1',\n                        description: 'Example argument',\n                        required: true\n                    }\n                ]\n            }\n        ]\n    };\n});\n\nserver.setRequestHandler(GetPromptRequestSchema, async request => {\n    if (request.params.name !== 'example-prompt') {\n        throw new Error('Unknown prompt');\n    }\n    return {\n        description: 'Example prompt',\n        messages: [\n            {\n                role: 'user',\n                content: {\n                    type: 'text',\n                    text: 'Example prompt text'\n                }\n            }\n        ]\n    };\n});\n\nconst transport = new StdioServerTransport();\nawait server.connect(transport);\n```\n\n### Eliciting User Input\n\nMCP servers can request additional information from users through the elicitation feature. This is useful for interactive workflows where the server needs user input or confirmation:\n\n```typescript\n// Server-side: Restaurant booking tool that asks for alternatives\nserver.registerTool(\n    'book-restaurant',\n    {\n        title: 'Book Restaurant',\n        description: 'Book a table at a restaurant',\n        inputSchema: {\n            restaurant: z.string(),\n            date: z.string(),\n            partySize: z.number()\n        },\n        outputSchema: {\n            success: z.boolean(),\n            booking: z\n                .object({\n                    restaurant: z.string(),\n                    date: z.string(),\n                    partySize: z.number()\n                })\n                .optional(),\n            alternatives: z.array(z.string()).optional()\n        }\n    },\n    async ({ restaurant, date, partySize }) => {\n        // Check availability\n        const available = await checkAvailability(restaurant, date, partySize);\n\n        if (!available) {\n            // Ask user if they want to try alternative dates\n            const result = await server.server.elicitInput({\n                message: `No tables available at ${restaurant} on ${date}. Would you like to check alternative dates?`,\n                requestedSchema: {\n                    type: 'object',\n                    properties: {\n                        checkAlternatives: {\n                            type: 'boolean',\n                            title: 'Check alternative dates',\n                            description: 'Would you like me to check other dates?'\n                        },\n                        flexibleDates: {\n                            type: 'string',\n                            title: 'Date flexibility',\n                            description: 'How flexible are your dates?',\n                            enum: ['next_day', 'same_week', 'next_week'],\n                            enumNames: ['Next day', 'Same week', 'Next week']\n                        }\n                    },\n                    required: ['checkAlternatives']\n                }\n            });\n\n            if (result.action === 'accept' && result.content?.checkAlternatives) {\n                const alternatives = await findAlternatives(restaurant, date, partySize, result.content.flexibleDates as string);\n                const output = { success: false, alternatives };\n                return {\n                    content: [\n                        {\n                            type: 'text',\n                            text: JSON.stringify(output)\n                        }\n                    ],\n                    structuredContent: output\n                };\n            }\n\n            const output = { success: false };\n            return {\n                content: [\n                    {\n                        type: 'text',\n                        text: JSON.stringify(output)\n                    }\n                ],\n                structuredContent: output\n            };\n        }\n\n        // Book the table\n        await makeBooking(restaurant, date, partySize);\n        const output = {\n            success: true,\n            booking: { restaurant, date, partySize }\n        };\n        return {\n            content: [\n                {\n                    type: 'text',\n                    text: JSON.stringify(output)\n                }\n            ],\n            structuredContent: output\n        };\n    }\n);\n```\n\nClient-side: Handle elicitation requests\n\n```typescript\n// This is a placeholder - implement based on your UI framework\nasync function getInputFromUser(\n    message: string,\n    schema: any\n): Promise<{\n    action: 'accept' | 'decline' | 'cancel';\n    data?: Record<string, any>;\n}> {\n    // This should be implemented depending on the app\n    throw new Error('getInputFromUser must be implemented for your platform');\n}\n\nclient.setRequestHandler(ElicitRequestSchema, async request => {\n    const userResponse = await getInputFromUser(request.params.message, request.params.requestedSchema);\n\n    return {\n        action: userResponse.action,\n        content: userResponse.action === 'accept' ? userResponse.data : undefined\n    };\n});\n```\n\n**Note**: Elicitation requires client support. Clients must declare the `elicitation` capability during initialization.\n\n### Writing MCP Clients\n\nThe SDK provides a high-level client interface:\n\n```typescript\nimport { Client } from '@modelcontextprotocol/sdk/client/index.js';\nimport { StdioClientTransport } from '@modelcontextprotocol/sdk/client/stdio.js';\n\nconst transport = new StdioClientTransport({\n    command: 'node',\n    args: ['server.js']\n});\n\nconst client = new Client({\n    name: 'example-client',\n    version: '1.0.0'\n});\n\nawait client.connect(transport);\n\n// List prompts\nconst prompts = await client.listPrompts();\n\n// Get a prompt\nconst prompt = await client.getPrompt({\n    name: 'example-prompt',\n    arguments: {\n        arg1: 'value'\n    }\n});\n\n// List resources\nconst resources = await client.listResources();\n\n// Read a resource\nconst resource = await client.readResource({\n    uri: 'file:///example.txt'\n});\n\n// Call a tool\nconst result = await client.callTool({\n    name: 'example-tool',\n    arguments: {\n        arg1: 'value'\n    }\n});\n```\n\n### Proxy Authorization Requests Upstream\n\nYou can proxy OAuth requests to an external authorization provider:\n\n```typescript\nimport express from 'express';\nimport { ProxyOAuthServerProvider } from '@modelcontextprotocol/sdk/server/auth/providers/proxyProvider.js';\nimport { mcpAuthRouter } from '@modelcontextprotocol/sdk/server/auth/router.js';\n\nconst app = express();\n\nconst proxyProvider = new ProxyOAuthServerProvider({\n    endpoints: {\n        authorizationUrl: 'https://auth.external.com/oauth2/v1/authorize',\n        tokenUrl: 'https://auth.external.com/oauth2/v1/token',\n        revocationUrl: 'https://auth.external.com/oauth2/v1/revoke'\n    },\n    verifyAccessToken: async token => {\n        return {\n            token,\n            clientId: '123',\n            scopes: ['openid', 'email', 'profile']\n        };\n    },\n    getClient: async client_id => {\n        return {\n            client_id,\n            redirect_uris: ['http://localhost:3000/callback']\n        };\n    }\n});\n\napp.use(\n    mcpAuthRouter({\n        provider: proxyProvider,\n        issuerUrl: new URL('http://auth.external.com'),\n        baseUrl: new URL('http://mcp.example.com'),\n        serviceDocumentationUrl: new URL('https://docs.example.com/')\n    })\n);\n```\n\nThis setup allows you to:\n\n- Forward OAuth requests to an external provider\n- Add custom token validation logic\n- Manage client registrations\n- Provide custom documentation URLs\n- Maintain control over the OAuth flow while delegating to an external provider\n\n### Backwards Compatibility\n\nClients and servers with StreamableHttp transport can maintain [backwards compatibility](https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#backwards-compatibility) with the deprecated HTTP+SSE transport (from protocol version 2024-11-05) as follows\n\n#### Client-Side Compatibility\n\nFor clients that need to work with both Streamable HTTP and older SSE servers:\n\n```typescript\nimport { Client } from '@modelcontextprotocol/sdk/client/index.js';\nimport { StreamableHTTPClientTransport } from '@modelcontextprotocol/sdk/client/streamableHttp.js';\nimport { SSEClientTransport } from '@modelcontextprotocol/sdk/client/sse.js';\nlet client: Client | undefined = undefined;\nconst baseUrl = new URL(url);\ntry {\n    client = new Client({\n        name: 'streamable-http-client',\n        version: '1.0.0'\n    });\n    const transport = new StreamableHTTPClientTransport(new URL(baseUrl));\n    await client.connect(transport);\n    console.log('Connected using Streamable HTTP transport');\n} catch (error) {\n    // If that fails with a 4xx error, try the older SSE transport\n    console.log('Streamable HTTP connection failed, falling back to SSE transport');\n    client = new Client({\n        name: 'sse-client',\n        version: '1.0.0'\n    });\n    const sseTransport = new SSEClientTransport(baseUrl);\n    await client.connect(sseTransport);\n    console.log('Connected using SSE transport');\n}\n```\n\n#### Server-Side Compatibility\n\nFor servers that need to support both Streamable HTTP and older clients:\n\n```typescript\nimport express from 'express';\nimport { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';\nimport { StreamableHTTPServerTransport } from '@modelcontextprotocol/sdk/server/streamableHttp.js';\nimport { SSEServerTransport } from '@modelcontextprotocol/sdk/server/sse.js';\n\nconst server = new McpServer({\n    name: 'backwards-compatible-server',\n    version: '1.0.0'\n});\n\n// ... set up server resources, tools, and prompts ...\n\nconst app = express();\napp.use(express.json());\n\n// Store transports for each session type\nconst transports = {\n    streamable: {} as Record<string, StreamableHTTPServerTransport>,\n    sse: {} as Record<string, SSEServerTransport>\n};\n\n// Modern Streamable HTTP endpoint\napp.all('/mcp', async (req, res) => {\n    // Handle Streamable HTTP transport for modern clients\n    // Implementation as shown in the \"With Session Management\" example\n    // ...\n});\n\n// Legacy SSE endpoint for older clients\napp.get('/sse', async (req, res) => {\n    // Create SSE transport for legacy clients\n    const transport = new SSEServerTransport('/messages', res);\n    transports.sse[transport.sessionId] = transport;\n\n    res.on('close', () => {\n        delete transports.sse[transport.sessionId];\n    });\n\n    await server.connect(transport);\n});\n\n// Legacy message endpoint for older clients\napp.post('/messages', async (req, res) => {\n    const sessionId = req.query.sessionId as string;\n    const transport = transports.sse[sessionId];\n    if (transport) {\n        await transport.handlePostMessage(req, res, req.body);\n    } else {\n        res.status(400).send('No transport found for sessionId');\n    }\n});\n\napp.listen(3000);\n```\n\n**Note**: The SSE transport is now deprecated in favor of Streamable HTTP. New implementations should use Streamable HTTP, and existing SSE implementations should plan to migrate.\n\n## Documentation\n\n- [Model Context Protocol documentation](https://modelcontextprotocol.io)\n- [MCP Specification](https://spec.modelcontextprotocol.io)\n- [Example Servers](https://github.com/modelcontextprotocol/servers)\n\n## Contributing\n\nIssues and pull requests are welcome on GitHub at <https://github.com/modelcontextprotocol/typescript-sdk>.\n\n## License\n\nThis project is licensed under the MIT License—see the [LICENSE](LICENSE) file for details.\n","_source_registry_name":"default","keywords":["modelcontextprotocol","mcp"],"repository":{"type":"git","url":"git+https://github.com/modelcontextprotocol/typescript-sdk.git"}}